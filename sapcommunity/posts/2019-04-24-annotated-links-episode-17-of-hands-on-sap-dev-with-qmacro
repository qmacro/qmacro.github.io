2019-04-24-annotated-links-episode-17-of-hands-on-sap-dev-with-qmacro
Annotated links: Episode 17 of Hands-on SAP dev with qmacro
technology-blog-sap
2019-04-24
https://community.sap.com/t5/technology-blogs-by-sap/annotated-links-episode-17-of-hands-on-sap-dev-with-qmacro/ba-p/13388103
<EM>This is a searchable description of the content of a live stream recording, specifically <STRONG>"Episode 17 - Digging into the annotation driven UI"</STRONG> in the "<A href="https://bit.ly/handsonsapdev" target="_blank" rel="nofollow noopener noreferrer">Hands-on SAP dev with qmacro</A>" series. There are links directly to specific highlights in the video recording. For links to annotations of other episodes, please see the "<A href="https://bit.ly/handsonsapdev#replays" target="_blank" rel="nofollow noopener noreferrer">Catch the replays</A>" section of the series blog post.</EM><BR />
<BR />
This episode, titled "<A href="https://bit.ly/handsonsapdev#ep17" target="_blank" rel="nofollow noopener noreferrer">Digging into the annotation driven UI</A>", was streamed live on Fri 05 Apr 2019 and is approximately one hour in length. The stream recording is <A href="https://www.youtube.com/watch?v=nmfAVcrQuzM&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0" target="_blank" rel="nofollow noopener noreferrer">available on YouTube</A>.<BR />
<BR />
<IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/04/Screen-Shot-2019-04-24-at-17.56.27.jpg" /><BR />
<BR />
Below is a brief synopsis, and links to specific highlights - use these links to jump directly to particular places of interest in the recording, based on 'hh:mm:ss' style timestamps.<BR />
<H2 id="brief-synopsis" id="toc-hId-907737379">Brief synopsis</H2><BR />
We take a look at the simple UI that we created in the previous episode and look a little bit behind the scenes, to learn a bit more about annotations, OData calls and more.<BR />
<H2 id="links-to-specific-highlights" id="toc-hId-711223874">Links to specific highlights</H2><BR />
<STRONG><A href="https://www.youtube.com/watch?v=nmfAVcrQuzM&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h02m58s" target="_blank" rel="nofollow noopener noreferrer">00:02:58</A>:</STRONG> Pointing out the Subreddit <A href="https://www.reddit.com/r/MechanicalKeyboards" target="_blank" rel="nofollow noopener noreferrer">Mechanical Keyboards</A> where I get my fill of news and advice. Recommended, and talking about different keyboards such as the Vortex Race 3 (75% keyboard) and the Anne Pro 2 (60% keyboard), as <SPAN class="mention-scrubbed">rsletta</SPAN> is thinking about taking the plunge and getting one (perhaps a Ducky One).<BR />
<BR />
Also I mention the geekiest (and possibly the best) Subreddit ever - which is <A href="https://www.reddit.com/r/vimkeyboard" target="_blank" rel="nofollow noopener noreferrer">vimkeyboard</A>. Wonderful.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=nmfAVcrQuzM&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h07m48s" target="_blank" rel="nofollow noopener noreferrer">00:07:48</A>:</STRONG> Reviewing what we did in the previous episode, getting a simple UI on the screen powered by UI annotations and Fiori Elements.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=nmfAVcrQuzM&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h09m00s" target="_blank" rel="nofollow noopener noreferrer">00:09:00</A>:</STRONG> Introducing the Slack channel I recently created as a backchannel for the Hands-on SAP dev series. I did think of using Discord (as Ronnie mentions) but I thought that Slack was more likely to be a tool that folks like us use already, and may already be a member of the SAP Mentors and Friends Slack workspace where this new channel lives.<BR />
<BR />
The idea of this channel is to have a continuum for chat between episodes, nothing strenuous or high-volume, just an ambient space for us to hang out in. You can join the workspace via this link here: <A class="uri" href="https://sapmentors-slack-invite.cfapps.eu10.hana.ondemand.com" target="_blank" rel="nofollow noopener noreferrer">https://sapmentors-slack-invite.cfapps.eu10.hana.ondemand.com</A> and then head on over to the #handsonsapdev channel. See you there!<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=nmfAVcrQuzM&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h11m30s" target="_blank" rel="nofollow noopener noreferrer">00:11:30</A>:</STRONG> While we're on the subject of Slack channels, there's also a channel for discussion of the work on the GitHub project <A href="https://github.com/sapmentors/sitregcapm" target="_blank" rel="nofollow noopener noreferrer">SITreg implemented in the SAP Cloud Application Programming Model</A>, which is #sitregdiscussion, in the same SAP Mentors and Friends Slack workspace.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=nmfAVcrQuzM&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h12m45s" target="_blank" rel="nofollow noopener noreferrer">00:12:45</A>:</STRONG> Introducing another live streamer <A href="https://www.twitch.tv/csharpfritz" target="_blank" rel="nofollow noopener noreferrer">Jeff Fritz</A>, who has a great channel on Twitch and is building software for the <A href="https://www.elgato.com/en/gaming/stream-deck" target="_blank" rel="nofollow noopener noreferrer">Elgato Streamdeck</A>.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=nmfAVcrQuzM&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h13m45s" target="_blank" rel="nofollow noopener noreferrer">00:13:45</A>:</STRONG> Announcing that <SPAN class="mention-scrubbed">iinside</SPAN> will be joining us on the next episode, talking about CAP and Java!<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=nmfAVcrQuzM&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h15m30s" target="_blank" rel="nofollow noopener noreferrer">00:15:30</A>:</STRONG> Looking at what we have as far as the Northbreeze app is concerned, exploring the contents of the <CODE>northbreeze</CODE> directory.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=nmfAVcrQuzM&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h16m30s" target="_blank" rel="nofollow noopener noreferrer">00:16:30</A>:</STRONG> Noting, in passing, the function import <CODE>hello</CODE>'s definition (in <CODE>service.cds</CODE>) and implementation (in <CODE>service.js</CODE>), and also (trivially) that I <A href="https://github.com/qmacro/scripts/commit/7c7f0b957ac7a008d37ddd5f7d266cdfc5ae2c64" target="_blank" rel="nofollow noopener noreferrer">turned on the 'box' outline in my Ranger setup</A>.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=nmfAVcrQuzM&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h17m40s" target="_blank" rel="nofollow noopener noreferrer">00:17:40</A>:</STRONG> Starting the app up with <CODE>cds deploy &amp;&amp; cds serve all</CODE> and looking at the app in its natural habitat (i.e. the sandbox launchpad).<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=nmfAVcrQuzM&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h19m45s" target="_blank" rel="nofollow noopener noreferrer">00:19:45</A>:</STRONG> Opening up the Chrome Developer Tools to see what's going on behind the scenes.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=nmfAVcrQuzM&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h21m40s" target="_blank" rel="nofollow noopener noreferrer">00:21:40</A>:</STRONG> Looking more closely at the annotations in <CODE>index.cds</CODE>. First, we're using <CODE>SelectionFields: []</CODE> (i.e. an empty list) to cause no selection (filter) fields to appear in the UI. Then, we have a set of in-line label definitions for the line item columns, like this:<BR />
<PRE class="cds"><CODE>LineItem: [<BR />
  { Value: ID, Label: 'ID' },<BR />
  { Value: name, Label: 'Name' },<BR />
  { Value: country, Label: 'Country' }<BR />
]</CODE></PRE><BR />
These labels appear in the column headings in the UI.<BR />
<BR />
Finally we have the <CODE>TypeNamePlural</CODE> annotation in the <CODE>HeaderInfo</CODE> section which is where the text for the section title in the UI comes from.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=nmfAVcrQuzM&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h28m50s" target="_blank" rel="nofollow noopener noreferrer">00:28:50</A>:</STRONG> Looking at the OData requests that are being made, and peering inside the <CODE>$batch</CODE> requests to see what's going on (OData v4 uses batching significantly). We also look at the Breezy service's <A href="http://localhost:4004/breezy/$metadata" target="_blank" rel="nofollow noopener noreferrer">metadata document</A> and note that the annotation texts we just changed are in there which sort of explains why we have to redeploy on CDS (annotation) changes.<BR />
<BR />
Talking of OData batch, we look briefly at the contructors for the UI5 OData model mechanisms, specifically <A href="https://sapui5.hana.ondemand.com/#/api/sap.ui.model.odata.v2.ODataModel" target="_blank" rel="nofollow noopener noreferrer">sap.ui.model.odata.v2.ODataModel</A> and <A href="https://sapui5.hana.ondemand.com/#/api/sap.ui.model.odata.v4.OdataModel" target="_blank" rel="nofollow noopener noreferrer">sap.ui.model.odata.v4.ODataModel</A> and noting that the constructor for v4 does not have a <CODE>useBatch</CODE> option in the parameters, suggesting that OData v4 is (as they say) "all batch, all the time".<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=nmfAVcrQuzM&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h35m05s" target="_blank" rel="nofollow noopener noreferrer">00:35:05</A>:</STRONG> Looking back at the code now to see what we need to do to internationalise the app, following a question in the previous episode from <A href="https://twitter.com/fbeuret" target="_blank" rel="nofollow noopener noreferrer">Fabien Beuret</A>.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=nmfAVcrQuzM&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h35m50s" target="_blank" rel="nofollow noopener noreferrer">00:35:50</A>:</STRONG> First, we remove the labels from the <CODE>LineItem</CODE> annotation section and add them to a new, separate section. This is a small example of how you can separate annotation work (and, more generally, CDS definitions) into sections that can be individually and independently maintained.<BR />
<BR />
This is where we put the label information:<BR />
<PRE class="cds"><CODE>annotate northbreeze.Suppliers with {<BR />
  ID @title: '{i18n&gt;ID}';<BR />
  [...]</CODE></PRE><BR />
Note even at this stage that the VS Code extension for CDS is giving us a warning on the <CODE>{i18n&gt;ID}</CODE> part: "Text for translation ID 'ID' not defined CDS(no-translation-text/title)". Nice!<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=nmfAVcrQuzM&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h39m20s" target="_blank" rel="nofollow noopener noreferrer">00:39:20</A>:</STRONG> It's now time to resolve these warnings by creating an annotation file, but first we have a quick look in the SAP Help Portal at the relevant documentation on <A href="https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/b3a0321c94194a21a17a991b0f879fbb.html" target="_blank" rel="noopener noreferrer">Localization</A>, where we see how we can organise our internationalisation (i18n) properties files.<BR />
<BR />
We take the option of specifying some configuration in the <CODE>cds</CODE> section of our <CODE>package.json</CODE> file like this:<BR />
<DIV><BR />
<PRE class="sourceCode json"><CODE class="sourceCode json"><SPAN class="er">"cds":</SPAN> <SPAN class="fu">{</SPAN><BR />
  <SPAN class="dt">"i18n"</SPAN><SPAN class="fu">:</SPAN> <SPAN class="fu">{</SPAN><BR />
    <SPAN class="dt">"folders"</SPAN><SPAN class="fu">:</SPAN> <SPAN class="ot">[</SPAN><BR />
      <SPAN class="st">"languages"</SPAN><BR />
    <SPAN class="ot">]</SPAN><BR />
  <SPAN class="fu">}</SPAN><BR />
<SPAN class="fu">}</SPAN></CODE></PRE><BR />
</DIV><BR />
to specify that i18n properties files are to be found in a directory called <CODE>languages</CODE>.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=nmfAVcrQuzM&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h44m10s" target="_blank" rel="nofollow noopener noreferrer">00:44:10</A>:</STRONG> In a new directory <CODE>srv/languages/</CODE> we create a new file <CODE>i18n.properties</CODE>, the "default fallback" file, and start adding regular i18n properties and values.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=nmfAVcrQuzM&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h46m16s" target="_blank" rel="nofollow noopener noreferrer">00:46:16</A>:</STRONG> In passing, we note how the CDS compiler inside the VS Code extension is working; it can read the new configuration in <CODE>package.json</CODE> that we've just added, find relevant translations for the annotations for ID, name and country and stop giving us warnings about the fact that none exist. Now they do, it looks good!<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=nmfAVcrQuzM&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h48m30s" target="_blank" rel="nofollow noopener noreferrer">00:48:30</A>:</STRONG> After a redeploy we refresh the app to see what's happened. We can see the texts in our new properties file are now in use.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=nmfAVcrQuzM&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h49m28s" target="_blank" rel="nofollow noopener noreferrer">00:49:28</A>:</STRONG> We now test this out further by specifying a different language in the UI. We do this by using a query parameter on the app's URL to specify the German language is required. Doing this with a query parameter (<CODE>sap-language</CODE>) this is just one way of doing this, of course:<BR />
<BR />
<A class="uri" href="http://localhost:4004/?sap-language=de#browse-suppliers" target="_blank" rel="nofollow noopener noreferrer">http://localhost:4004/?sap-language=de#browse-suppliers</A><BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=nmfAVcrQuzM&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h51m00s" target="_blank" rel="nofollow noopener noreferrer">00:51:00</A>:</STRONG> Even though we haven't yet added any specific German translations to our properties files, we do see some German already ("Suchen" in the search field) because of the fact that UI5 controls come already internationalised!<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=nmfAVcrQuzM&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h51m39s" target="_blank" rel="nofollow noopener noreferrer">00:51:39</A>:</STRONG> Adding a second i18n properties file, <CODE>i18n_de.properties</CODE>, with some German texts.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=nmfAVcrQuzM&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h52m30s" target="_blank" rel="nofollow noopener noreferrer">00:52:30</A>:</STRONG> Note that the request for the metadata document of the OData service is also made with the German language request, which we can see in the Chrome Developer Tools - in the form of a request header:<BR />
<PRE><CODE>Accept-Language: de</CODE></PRE><BR />
<STRONG><A href="https://www.youtube.com/watch?v=nmfAVcrQuzM&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h54m24s" target="_blank" rel="nofollow noopener noreferrer">00:54:24</A>:</STRONG> We note now, when the app is refreshed, the new German texts are being picked up!<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=nmfAVcrQuzM&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h55m50s" target="_blank" rel="nofollow noopener noreferrer">00:55:50</A>:</STRONG> Just for fun, we try a different language, this time a right-to-left one, in the form of Hebrew, where we see that UI5 allows the app to precisely adapt to the locale requirements of that language. Did I mention I think UI5 is awesome? <span class="lia-unicode-emoji" title=":slightly_smiling_face:">🙂</span>
