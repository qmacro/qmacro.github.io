2024-07-26-task-9-using-cql-in-an-unbound-action-july-developer-challenge-quot-reverse
Task 9 - Using CQL in an unbound action (July Developer Challenge - "Reverse APIs")
application-developmentforum-board
2024-07-26
https://community.sap.com/t5/application-development-discussions/task-9-using-cql-in-an-unbound-action-july-developer-challenge-quot-reverse/td-p/13772607
<P>This is a task in the<SPAN>&nbsp;</SPAN><A href="https://community.sap.com/t5/application-development-blog-posts/2024-07-quot-reverse-apis-quot-sap-developer-challenge/ba-p/13749653" target="_blank">July Developer Challenge - "Reverse APIs"</A>.</P><P>In this task you'll define and implement an unbound action, that does something that you might remember from the<SPAN>&nbsp;</SPAN><A href="https://community.sap.com/t5/technology-blogs-by-sap/sap-developer-challenge-apis/ba-p/13573168" target="_blank">Developer Challenge on APIs last year in August</A>, and you'll end up writing some (hopefully) interesting code for the implementation.</P><H2 id="toc-hId-1021156525">Background</H2><P>Last year we ran a<SPAN>&nbsp;</SPAN><A href="https://community.sap.com/t5/technology-blogs-by-sap/sap-developer-challenge-apis/ba-p/13573168" target="_blank">Developer Challenge on APIs</A>. In one of the tasks -<SPAN>&nbsp;</SPAN><A href="https://community.sap.com/t5/application-development-discussions/sap-developer-challenge-apis-task-3-have-a-northbreeze-product-selected-for/m-p/277972" target="_blank">Task 3 - Have a Northbreeze product selected for you</A><SPAN>&nbsp;</SPAN>- you needed to make a call to an API endpoint supplying your SAP Community ID and it would return a Northwind product. In the<SPAN>&nbsp;</SPAN><A href="https://community.sap.com/t5/application-development-discussions/sap-developer-challenge-apis-task-3-have-a-northbreeze-product-selected-for/m-p/277972#toc-hId--900893759" target="_blank">example</A><SPAN>&nbsp;</SPAN>for my ID, "qmacro", it showed this being returned:</P><DIV class=""><PRE>{
  <SPAN class="">"@odata.context"</SPAN>: <SPAN class=""><SPAN class="">"</SPAN>$metadata#Edm.String<SPAN class="">"</SPAN></SPAN>,
  <SPAN class="">"value"</SPAN>: <SPAN class=""><SPAN class="">"</SPAN>R√∂ssle Sauerkraut<SPAN class="">"</SPAN></SPAN>
}</PRE><DIV class=""><SPAN>In other words, the product "corresponding to" my SAP Community ID is "R√∂ssle Sauerkraut". Different products were returned for different SAP Community IDs, so that your answers would be different to each other. The calculation of</SPAN><SPAN>&nbsp;</SPAN><EM>which</EM><SPAN>&nbsp;</SPAN><SPAN>product to return was based on the value of your SAP Community ID.</SPAN></DIV></DIV><P>In this task, you will need to define an API endpoint, in the form of an unbound action, and write the implementation to calculate, look up and return the name of a product that corresponds to the SAP Community ID that is sent by the TESTER.</P><H3 id="toc-hId-953725739">Correspondence calculation</H3><P>So how should you determine which product to select for a given SAP Community ID? The same way that it was determined in last year's Developer Challenge for<SPAN>&nbsp;</SPAN><A href="https://community.sap.com/t5/application-development-discussions/sap-developer-challenge-apis-task-3-have-a-northbreeze-product-selected-for/m-p/277972" target="_blank">that task</A>. And that is to turn the SAP Community ID string value into a numeric value, and then use that to select a specific product with an ID (in<SPAN>&nbsp;</SPAN>ProductID) that matches that numeric value.</P><P>Here's the logic:</P><P>First:</P><UL><LI>ensure the SAP Community ID is all lower case</LI><LI>convert each character to its equivalent decimal ASCII code</LI><LI>add the resulting list of ASCII codes together to make a total</LI></UL><P>Then:</P><UL><LI>determine how many products are in your Northbreeze data</LI><LI>read a single product where the key is the ASCII codes total value</LI></UL><P>Noting that:</P><UL><LI>you will need to use modulo arithmetic to ensure that the ASCII codes total value falls within the range between 1 and the total number of Northbreeze products</LI></UL><P>And here's an example of that logic in action, where (for the sake of illustration) the SAP Community ID value "QmacrO" is sent in the payload of the HTTP request:</P><UL><LI>converting "QmacrO" to lower case gives "qmacro"</LI><LI>the decimal ASCII codes for "qmacro" are 113, 109, 97, 99, 114 and 111</LI><LI>added together, these codes come to 643</LI><LI>there are<SPAN>&nbsp;</SPAN><A href="https://qmacro.cfapps.eu10.hana.ondemand.com/northbreeze/Products/$count" target="_blank" rel="nofollow noopener noreferrer">77 Northbreeze products</A></LI><LI>using modulo arithmetic to turn 643 into a number between 1 and 77, it becomes 28</LI><LI>the product with ID 28 is<SPAN>&nbsp;</SPAN><A href="https://qmacro.cfapps.eu10.hana.ondemand.com/northbreeze/Products/28" target="_blank" rel="nofollow noopener noreferrer">R√∂ssle Sauerkraut</A></LI></UL><P>Be careful with the modulo calculation, because you need to take into account that the result of a modulo calculation could be 0, which is not in the ID range. It would also never be 77. This is why 643 modulo 77 becomes 28, not 27 (basically, do the modulo calculation and add 1).</P><P>Clearly these instructions have already told you that there are 77 products. You should have 77 products too if you<SPAN>&nbsp;</SPAN><A href="https://community.sap.com/t5/application-development-discussions/task-7-using-cql-in-an-unbound-function-implementation-july-developer/td-p/13767476#toc-hId-952949467" target="_blank">started with the repo as recommended</A>. Nevertheless, we encourage you to use some CQL in your implementation to programatically determine how many products there are, not just set the value<SPAN>&nbsp;</SPAN>77<SPAN>&nbsp;</SPAN>in a constant <span class="lia-unicode-emoji" title=":slightly_smiling_face:">üôÇ</span></P><H2 id="toc-hId-628129515">The requirements</H2><P>Here are the specific requirements for this task.</P><P>Add an unbound action called<SPAN>&nbsp;</SPAN>selectProduct<SPAN>&nbsp;</SPAN>to the definition of your<SPAN>&nbsp;</SPAN>northbreeze<SPAN>&nbsp;</SPAN>service. It should expect a String value for a single parameter named<SPAN>&nbsp;</SPAN>communityid, and it should return the same type as the<SPAN>&nbsp;</SPAN>ProductName<SPAN>&nbsp;</SPAN>element in the<SPAN>&nbsp;</SPAN>Products<SPAN>&nbsp;</SPAN>entity type.</P><P>Note that although you will of course be supplying your SAP Community ID as normal when you submit to the TESTER (see the next section), as usual, it will be the<SPAN>&nbsp;</SPAN><EM>TESTER</EM><SPAN>&nbsp;</SPAN>that picks and sends an SAP Community ID to<SPAN>&nbsp;</SPAN><EM>your</EM><SPAN>&nbsp;</SPAN>endpoint, not you, of course.</P><P>In the implementation, use CQL to determine the number of products you have, and then use the logic described in the "Correspondence calculation" section earlier to determine the product ID, based on the (semi-random) SAP Community ID value received. Then use CQL to retrieve that product and return the product name.</P><H2 id="toc-hId-431616010">Submitting to the TESTER</H2><P>Now you're ready to submit your CANDIDATE service, with this new API endpoint, to the TESTER!</P><H3 id="toc-hId-364185224">The payload</H3><P>The task identifier you need to supply in the payload of your submission is:<SPAN>&nbsp;</SPAN><STRONG>northbreeze-selectProduct</STRONG>.</P><P>You'll have already done this sort of thing<SPAN>&nbsp;</SPAN><A href="https://community.sap.com/t5/application-development-discussions/july-developer-challenge-quot-reverse-apis-quot-task-1-your-first-service/m-p/13752205" target="_blank">previously</A><SPAN>&nbsp;</SPAN>so just head back there for the more detailed instructions if you need them, or to the the section titled "<A href="https://community.sap.com/t5/application-development-blog-posts/2024-07-quot-reverse-apis-quot-sap-developer-challenge/ba-p/13749653#toc-hId--553513390" target="_blank">The Tester service, and making a test request</A>" in the<SPAN>&nbsp;</SPAN><A href="https://community.sap.com/t5/application-development-blog-posts/2024-07-quot-reverse-apis-quot-sap-developer-challenge/ba-p/13749653" target="_blank">main challenge blog post</A>.</P><P>You'll need to submit a JSON payload like this:</P><DIV class=""><PRE>{
  <SPAN class="">"communityid"</SPAN>: <SPAN class=""><SPAN class="">"</SPAN>&lt;your-community-id&gt;<SPAN class="">"</SPAN></SPAN>,
  <SPAN class="">"serviceurl"</SPAN>: <SPAN class=""><SPAN class="">"</SPAN>&lt;the-URL-of-your-service&gt;<SPAN class="">"</SPAN></SPAN>,
  <SPAN class="">"task"</SPAN>: <SPAN class=""><SPAN class="">"</SPAN>northbreeze-selectProduct<SPAN class="">"</SPAN></SPAN>
}</PRE><DIV class=""><SPAN>And, just as with the previous (and all further tasks):</SPAN></DIV></DIV><UL><LI><P>the value for the<SPAN>&nbsp;</SPAN>communityid<SPAN>&nbsp;</SPAN>property should be your ID on this SAP Community platform (e.g. mine is "qmacro")</P></LI><LI><P>the value for the<SPAN>&nbsp;</SPAN>serviceurl<SPAN>&nbsp;</SPAN>property should be the absolute URL (i.e. including the scheme), of your CANDIDATE<SPAN>&nbsp;</SPAN><STRONG>service</STRONG><SPAN>&nbsp;</SPAN>which<SPAN>&nbsp;</SPAN><EM>contains</EM><SPAN>&nbsp;</SPAN>the API endpoint (see<SPAN>&nbsp;</SPAN><A href="https://community.sap.com/t5/application-development-blog-posts/2024-07-quot-reverse-apis-quot-sap-developer-challenge/ba-p/13749653#toc-hId--356999885" target="_blank"><span class="lia-unicode-emoji" title=":information:">‚ÑπÔ∏è</span><SPAN>&nbsp;</SPAN>A note on URLs and services</A>).</P></LI></UL><P>That's it!</P><H2 id="toc-hId-38589000">Logging of test results</H2><P>Remember that you can check on your progress, and the progress of your fellow participants - all requests are logged and are available in an entity set served by the TESTER service. The entity set URL is<SPAN>&nbsp;</SPAN><A href="https://developer-challenge-2024-07.cfapps.eu10.hana.ondemand.com/tester/Testlog" target="_blank" rel="nofollow noopener noreferrer">https://developer-challenge-2024-07.cfapps.eu10.hana.ondemand.com/tester/Testlog</A><SPAN>&nbsp;</SPAN>and being an OData V4 entity set, all the normal OData system query options are available to you for digging into that information.</P><P>Until the next task, have fun, and if you have any questions or comments, leave them below!</P>
