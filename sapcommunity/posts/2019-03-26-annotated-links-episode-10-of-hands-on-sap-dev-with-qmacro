2019-03-26-annotated-links-episode-10-of-hands-on-sap-dev-with-qmacro
Annotated links: Episode 10 of Hands-on SAP dev with qmacro
technology-blog-sap
2019-03-26
https://community.sap.com/t5/technology-blogs-by-sap/annotated-links-episode-10-of-hands-on-sap-dev-with-qmacro/ba-p/13390293
<EM>This is a searchable description of the content of a live stream recording, specifically <STRONG>"Episode 10 - Finishing off the data retrieval mechanism in Node.js"</STRONG> in the "<A href="https://bit.ly/handsonsapdev" target="_blank" rel="nofollow noopener noreferrer">Hands-on SAP dev with qmacro</A>" series. There are links directly to specific highlights in the video recording. For links to annotations of other episodes, please see the "<A href="https://bit.ly/handsonsapdev#replays" target="_blank" rel="nofollow noopener noreferrer">Catch the replays</A>" section of the series blog post.</EM><BR />
<BR />
This episode, titled "<A href="https://bit.ly/handsonsapdev#ep10" target="_blank" rel="nofollow noopener noreferrer">Finishing off the data retrieval mechanism in Node.js</A>", was streamed live on Thu 07 Mar 2019 and is approximately one hour in length. The stream recording is <A href="https://www.youtube.com/watch?v=4uu3fCGiZ6U&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0" target="_blank" rel="nofollow noopener noreferrer">available on YouTube</A>.<BR />
<BR />
<IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/03/Screen-Shot-2019-03-21-at-08.38.56.png" /><BR />
<BR />
Below is a brief synopsis, and links to specific highlights - use these links to jump directly to particular places of interest in the recording, based on 'hh:mm:ss' style timestamps.<BR />
<H2 id="brief-synopsis" id="toc-hId-908423812">Brief synopsis</H2><BR />
Following the previous episode thereâ€™s a bit more work to do to finish off the data retrieval mechanism we have been building to extract data from the original Northwind service and turn it into CSV files that can be loaded into a persistence layer with <CODE>cds deploy</CODE>. In this episode we finish this off and load the data.<BR />
<H2 id="links-to-specific-highlights" id="toc-hId-711910307">Links to specific highlights</H2><BR />
<STRONG><A href="https://www.youtube.com/watch?v=4uu3fCGiZ6U&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h02m20s" target="_blank" rel="nofollow noopener noreferrer">00:02:20</A>:</STRONG> Remembering where we left off, which was just having loaded the Categories CSV file into Northbreeze, and we have a <CODE>northbreeze.db</CODE> command from the use of the <CODE>cds deploy</CODE> invocation. Thinking also about what we have to do from a CSV column header perspective to make the navigation property relationships work "underneath".<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=4uu3fCGiZ6U&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h04m55s" target="_blank" rel="nofollow noopener noreferrer">00:04:55</A>:</STRONG> Looking at the data definitions in the persistence layer with the <CODE>sqlite3</CODE> ".dump" command, and noticing how the entities are related via the "_ID" suffixed property names (<CODE>supplier_ID</CODE> and <CODE>category_ID</CODE>).<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=4uu3fCGiZ6U&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h07m30s" target="_blank" rel="nofollow noopener noreferrer">00:07:30</A>:</STRONG> We see that this is similar in the Northwind service, when we look at the properties available in the Products entityset.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=4uu3fCGiZ6U&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h08m08s" target="_blank" rel="nofollow noopener noreferrer">00:08:08</A>:</STRONG> Re-attaching to the tmux session we had yesterday, with <CODE>tmux a</CODE>, and behold, all our work is still there ready for us to continue. <A href="https://en.wikipedia.org/wiki/Tmux" target="_blank" rel="nofollow noopener noreferrer">Terminal multiplexers</A> ftw!<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=4uu3fCGiZ6U&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h08m30s" target="_blank" rel="nofollow noopener noreferrer">00:08:30</A>:</STRONG> Showing that you can zoom a tmux pane to expand to the entire window size with the prefix key + 'z' (for "zoom"). By default the prefix key is set to Ctrl-b, but I've set it to Ctrl-a as I find that an easier key combination to type. So "Ctrl-a z" will zoom a pane to full window size, and that same combination will toggle it (un-zoom it) back again.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=4uu3fCGiZ6U&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h10m02s" target="_blank" rel="nofollow noopener noreferrer">00:10:02</A>:</STRONG> Using the Vim plugin <A href="https://github.com/scrooloose/nerdtree" target="_blank" rel="nofollow noopener noreferrer">Nerdtree</A> to explore the directory structure and find the file I'm looking for, which is the <CODE>model.cds</CODE> file, so I can have that as reference when I'm filling out the configuration in the <CODE>entities</CODE> map in the <CODE>grab.js</CODE> script.<BR />
<BR />
I toggle Nerdtree with a key combination in Vim, specifically with this configuration:<BR />
<PRE><CODE>nnoremap &lt;leader&gt;n :NERDTreeToggle&lt;cr&gt;</CODE></PRE><BR />
See my Vim config in the <A href="https://github.com/qmacro/dotvim" target="_blank" rel="nofollow noopener noreferrer">dotvim</A> repository on GitHub for more details.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=4uu3fCGiZ6U&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h15m15s" target="_blank" rel="nofollow noopener noreferrer">00:15:15</A>:</STRONG> The default cds command is "compile", but we can also invoke it explicitly, which we do, to check what data definition language (DDL) statements will be generated for the service:<BR />
<PRE><CODE>cds compile srv --to sql</CODE></PRE><BR />
<STRONG><A href="https://www.youtube.com/watch?v=4uu3fCGiZ6U&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h17m15s" target="_blank" rel="nofollow noopener noreferrer">00:17:15</A>:</STRONG> Disabling the Ctrl key on my keyboard to try and force myself to use the CapsLock key which I'd previously redefined to work as a Ctrl key. I think this trips me up later on, but hey. (Update: it does!)<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=4uu3fCGiZ6U&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h18m55s" target="_blank" rel="nofollow noopener noreferrer">00:18:55</A>:</STRONG> Accidentally discovering a <A href="https://github.com/ranger/ranger" target="_blank" rel="nofollow noopener noreferrer">Ranger</A> feature, which is that if you select multiple files (with space, for example), selecting one of them (with "l", to go "right" into it) will open up the default handler for that file type, which in this case is my editor Vim, but it will open up Vim <EM>for all selected files</EM>, which means I can then navigate between then in Vim. Nice!<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=4uu3fCGiZ6U&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h20m30s" target="_blank" rel="nofollow noopener noreferrer">00:20:30</A>:</STRONG> We replace the value of the base URL with the real Northwind service URL in <CODE>grab.js</CODE>, so that the real and final execution of the script uses Northwind rather than our saved data files.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=4uu3fCGiZ6U&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h23m30s" target="_blank" rel="nofollow noopener noreferrer">00:23:30</A>:</STRONG> Triggered by a comment by <SPAN class="mention-scrubbed">nabheet.madan3</SPAN> we look at a Tweet thread on ABAP editor nostalgia, remembering how I edited ABAP in the late 1980's when it first appeared on the scene, and wondering whether we'll ever see ABAP being edited in Vim, via a language server implementation. Gosh!<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=4uu3fCGiZ6U&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h25m32s" target="_blank" rel="nofollow noopener noreferrer">00:25:32</A>:</STRONG> Creating a new window in tmux and copying the CSV files we've just generated with the <CODE>grab.js</CODE> script into the <CODE>db/csv/</CODE> directory in our Northbreeze project.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=4uu3fCGiZ6U&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h26m30s" target="_blank" rel="nofollow noopener noreferrer">00:26:30</A>:</STRONG> Someone at the door! Announced (and displayed) on my Google Home Hub via the Nest Hello device in the porch.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=4uu3fCGiZ6U&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h27m40s" target="_blank" rel="nofollow noopener noreferrer">00:27:40</A>:</STRONG> Using the Vim keybinding approach to rename files in Ranger, and there's also a "mass rename" feature, which I couldn't remember how to use at the time, but it's described here: <A href="https://github.com/ranger/ranger/wiki/Official-user-guide#bulk-renaming" target="_blank" rel="nofollow noopener noreferrer">Bulk renaming</A>.<BR />
<BR />
Now we have the CSV files renamed to follow the convention that says the names should be <CODE>&lt;namespace&gt;-&lt;Entityname&gt;.csv</CODE>.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=4uu3fCGiZ6U&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h30m55s" target="_blank" rel="nofollow noopener noreferrer">00:30:55</A>:</STRONG> Using <CODE>cds deploy</CODE> to have the CSV data loaded into the persistence layer. We don't need to specify the <CODE>--to sqlite:northbreeze.db</CODE> option as that detail has already been saved in the <CODE>package.json</CODE> file from a previous invocation.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=4uu3fCGiZ6U&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h32m20s" target="_blank" rel="nofollow noopener noreferrer">00:32:20</A>:</STRONG> Using <CODE>cds run</CODE> to start the service, where we can successfully see only the metadata document, including the navigation properties that are a result of the associations we've defined in <CODE>model.cds</CODE>. Lovely!<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=4uu3fCGiZ6U&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h36m32s" target="_blank" rel="nofollow noopener noreferrer">00:36:32</A>:</STRONG> Looking at the data too, in the Categories, Suppliers and Products entitysets, which is now available as it's been loaded into the persistence layer, from the CSV files, in the <CODE>cds deploy</CODE> activity.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=4uu3fCGiZ6U&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h37m55s" target="_blank" rel="nofollow noopener noreferrer">00:37:55</A>:</STRONG> Trying some OData query options, such as these:<BR />
<PRE><CODE><A href="http://localhost:4004/breezy/Categories?$expand=products" target="test_blank" rel="nofollow noopener noreferrer">http://localhost:4004/breezy/Categories?$expand=products</A><BR />
<A href="http://localhost:4004/breezy/Suppliers?$expand=products" target="test_blank" rel="nofollow noopener noreferrer">http://localhost:4004/breezy/Suppliers?$expand=products</A></CODE></PRE><BR />
and also<BR />
<PRE><CODE><A href="http://localhost:4004/breezy/Products?$select=name,discontinued" target="test_blank" rel="nofollow noopener noreferrer">http://localhost:4004/breezy/Products?$select=name,discontinued</A></CODE></PRE><BR />
... where we discover something odd about the values of the <CODE>discontinued</CODE> property: they are all set to <CODE>true</CODE>, which is not correct (we double check this by looking at the "same" query on the original Northwind service: <A href="https://services.odata.org/V3/Northwind/Northwind.svc/Products?$format=json&amp;$select=Discontinued" target="_blank" rel="nofollow noopener noreferrer"></A><A href="https://services.odata.org/V3/Northwind/Northwind.svc/Products" target="test_blank" rel="nofollow noopener noreferrer">https://services.odata.org/V3/Northwind/Northwind.svc/Products</A>?<SPAN class="math inline">$format=json&amp;$</SPAN>select=Discontinued.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=4uu3fCGiZ6U&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h40m40s" target="_blank" rel="nofollow noopener noreferrer">00:40:40</A>:</STRONG> Looking at the persistence layer, we can see that the values in the database are actually correct (i.e. we have some <CODE>false</CODE> values for the <CODE>discontinued</CODE> property).<BR />
<BR />
We leave it there, on this exciting cliffhanger! What is up with the <CODE>discontinued</CODE> property values? Let's find out soon!
