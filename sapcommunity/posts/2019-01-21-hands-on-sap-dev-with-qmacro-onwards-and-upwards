2019-01-21-hands-on-sap-dev-with-qmacro-onwards-and-upwards
Hands-on SAP dev with qmacro - onwards and upwards!
technology-blog-sap
2019-01-21
https://community.sap.com/t5/technology-blogs-by-sap/hands-on-sap-dev-with-qmacro-onwards-and-upwards/ba-p/13396497
<EM>My first live stream happened last week, and I think on balance I can say it was successful. Read more about it here.</EM><BR />
<BR />
On Friday last week I live streamed for the first time, on Twitch. A couple of days beforehand, I published the post "<A href="https://blogs.sap.com/2019/01/16/hands-on-sap-dev-with-qmacro-new-live-stream-series/" target="_blank" rel="noopener noreferrer">Hands-on SAP dev with qmacro - new live stream series</A>" to give folks a heads up.&nbsp;That post is still relevant, and it's where you can find out more about the idea for live streaming, the plans, a schedule, and how to watch.<BR />
<BR />
<STRONG>Setup</STRONG><BR />
<BR />
I'd set up as much as could beforehand, in terms of hardware and software (I plan to write a separate blog post on the details of this setup, it's a fascinating area and was completely new to me).<BR />
<BR />
In my streaming software setup I have three main "scenes" set up: "Standby", "Video &amp; Chat" and "Main", which I can switch between as and when I need to.<BR />
<BR />
<IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/01/Screen-Shot-2019-01-21-at-15.05.46.png" /><BR />
<BR />
I hit the "go live" switch at a few minutes before the hour, with my "Standby" scene active. This allows the early viewers to know that the stream will be starting soon, and exposes the stream chat&nbsp; in the stream video itself, too which is a useful touch, I think.<BR />
<BR />
At 0800 Manchester time (I'm trying to make this an official timezone, not sure how successful I'll be) I switched from the "Standby" scene to the "Video &amp; Chat" scene which adds a large webcam capture window, which gives me a chance to get closer to the viewers while I explained the idea of the live stream initiative and the plan for the next hour.<BR />
<BR />
Then it was on to the main business of the episode, and for that I switched to the "Main" scene, which included (as you can see in the screenshot) lots of detail including the capture of one of my Displays, as well as a smaller webcam capture window and of course the live chat.<BR />
<BR />
<IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/01/Screen-Shot-2019-01-21-at-15.10.05.png" height="341" width="614" /><BR />
<BR />
<STRONG>The episode</STRONG><BR />
<BR />
I was absolutely overwhelmed by the number of viewers who not only came watch the live stream, but also to interact with each other in the chat. The expectations I'd set were quite modest, and it's fair to say that these expectations were far surpassed. Thank you to all of you who joined the session - you all made it what it was, super successful, fun, interactive and an event where I hope all of us learned something (I know I did!).<BR />
<BR />
Here are some stats from Twitch about the session itself:<BR />
<BR />
<IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/01/Screen-Shot-2019-01-21-at-14.55.49.png" /><BR />
<BR />
Over 50 average viewers, peaking at over 60 - I think that's wonderful for the first episode. I am looking forward very much to the next episode, which of course is <STRONG>this coming Friday (25 Jan)</STRONG>. For those of you who don't know, the idea is that it's weekly, on Fridays, always at the same time, for an hour, starting at 0800 Manchester time, which translates into the following times around the world: 0900 in Berlin, 1330 in Bengaluru and 1900 in Sydney&nbsp;(more in the <A href="https://blogs.sap.com/2019/01/16/hands-on-sap-dev-with-qmacro-new-live-stream-series/#schedule" target="_blank" rel="noopener noreferrer">schedule section of my previous post</A>).<BR />
<BR />
Discussion was active throughout, too, with 134 chat messages in total.<BR />
<BR />
We looked briefly at this tutorial on the <A href="https://developers.sap.com" target="_blank" rel="noopener noreferrer">developers.sap.com</A> site: "<A href="https://developers.sap.com/tutorials/cp-apm-nodejs-create-service.html" target="_blank" rel="noopener noreferrer">Create a Business Service with Node.js using Visual Studio Code</A>"&nbsp;and specifically examined the nicely modern JavaScript in the "Provide mock data" and "Add custom logic" steps, noting various modern constructs and techniques such as destructuring, fat arrow function definition syntax, and more.<BR />
<BR />
We then used parts A and B of the <A href="https://adventofcode.com/2018/day/1" target="_blank" rel="nofollow noopener noreferrer">Day 1 puzzle from Advent Of Code 2018</A>&nbsp;to warm up our collective grey matter a little. We based our hacking activities around a simple test harness that expects a dayN.js file with two exported solver functions <CODE>a</CODE>&nbsp;and <CODE>b</CODE>, and a dayN.input file with the day's input.<BR />
<BR />
This is what the test harness (<CODE>index.js</CODE>) looked like:<BR />
<PRE class="language-javascript"><CODE>// Test runner for AOC solutions<BR />
<BR />
// The day is expected to be passed via an env var 'DAY'<BR />
// From this we make the JS module (e.g. day1.js) and the input (e.g. day1.input)<BR />
const<BR />
	solver = './day' + (process.env.DAY || 1),<BR />
	input = solver + '.input'<BR />
<BR />
	// To clean the input generically<BR />
	clean = x =&gt; x<BR />
		.split(/\n/)                    // split lines into array<BR />
		.map(x =&gt; x.replace(/\r$/, '')) // remove any carriage returns<BR />
		.filter(x =&gt; x.length),         // drop any empty lines<BR />
<BR />
	// Load the day's solver (which should have 'a' and 'b' functions)<BR />
	solve = require(solver)<BR />
<BR />
// Load the input, clean up, and run the solvers a and b<BR />
require('fs').readFile(input, 'utf8', (err, data) =&gt; {<BR />
<BR />
	const input = clean(data)<BR />
<BR />
	// Output solutions<BR />
	console.log(solve.a(input))<BR />
	console.log(solve.b(input))<BR />
})</CODE></PRE><BR />
We used some <CODE>map</CODE>&nbsp;and <CODE>reduce</CODE>&nbsp;goodness to solve part <CODE>a</CODE>, and then looked at building a "seen" mechanism using a <A href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures" target="_blank" rel="nofollow noopener noreferrer">closure</A> and an <A href="https://developer.mozilla.org/en-US/docs/Glossary/IIFE" target="_blank" rel="nofollow noopener noreferrer">Immediately Invoked Function Expression</A> (IIFE) to solve part <CODE>b</CODE>.<BR />
<BR />
It was fun!<BR />
<BR />
<STRONG>Thank you</STRONG><BR />
<BR />
I'm leaving the most important section to the end of this post, which is to recognise and thank everyone who joined, you are the ones who made the episode successful. Some of you had already started following me on Twitch, and some joined the stream and followed there and then.<BR />
<BR />
abapfreak, Espersura, StErMi87, avhbn, hobru2000, aminmarsafy, ccmehil, saffronsoul, uwek0, larshp, fredverheul, christianguenter, nocheintobi, dn1977, venkymachineni, pimpmycode, CariFaine, pjcools, chandanpraharaj, ljadhav, bharath86, sygyzmundovych, rgeeks_mrd, hausenhexe, mexlance, nabheetmadan, 5PERI, henrik_da, cleSAP, tpham207, Roberdinho, lvhengel, mexico_man, hfumey, ennowulff, imyourtwitchdoctor, Seiivo, ceedee666, koehntopp, rileyrainey, sevladimirs, darkworld2255, fullstackdaun, aydogdumurat, tassie_rocks, thulium3, mylesfenton, patrizia0103, IchBimsDeiMudda, nzamani, BungaloX, harunkar, CoreKeeper, callaghan001, sun150690, rohith480, alancecchini, hamzoo, ankit403, grabenschlaefer, tgrassl, fabianorosa1, rsletta, nypesap, sw1fm4n, Lupomania, ssurampally, vaihbavshetkar, uxkjaer, fulstak.<BR />
<BR />
A special thank you to those that took part in the conversation. This series is all about learning from each other, so good on you.<BR />
<BR />
For those who are interested in the subsequent episodes in this "<A href="https://blogs.sap.com/tag/handsonsapdev/" target="_blank" rel="noopener noreferrer">Hands on SAP dev with qmacro</A>" series and who are not already following, may I recommend you follow me on Twitch - go here: <A href="https://twitch.tv/qmacro99" target="_blank" rel="nofollow noopener noreferrer">https://twitch.tv/qmacro99</A> and hit the "Follow" button:<BR />
<BR />
<IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/01/Screen-Shot-2019-01-21-at-15.26.47.png" /><BR />
<BR />
Find out in the <A href="https://blogs.sap.com/2019/01/16/hands-on-sap-dev-with-qmacro-new-live-stream-series/#updates" target="_blank" rel="noopener noreferrer">updates section of my previous post</A>&nbsp;how to get reminded of upcoming events.<BR />
<BR />
Finally, in the words of the Sirius Cybernetic Corporation Complaints division (<A href="https://hitchhikers.fandom.com/wiki/Share_and_Enjoy" target="_blank" rel="nofollow noopener noreferrer">from Hitch Hiker's Guide to the Galaxy</A>, of course): <STRONG>share and enjoy</STRONG>!
