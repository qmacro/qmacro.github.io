2024-07-30-task-11-using-implicit-parameters-with-a-bound-function-july-developer
Task 11 - Using implicit parameters with a bound function (July Developer Challenge - "Reverse APIs"
application-developmentforum-board
2024-07-30
https://community.sap.com/t5/application-development-discussions/task-11-using-implicit-parameters-with-a-bound-function-july-developer/td-p/13776485
<P>This is the final task in the<SPAN>&nbsp;</SPAN><A href="https://community.sap.com/t5/application-development-blog-posts/2024-07-quot-reverse-apis-quot-sap-developer-challenge/ba-p/13749653" target="_blank">July Developer Challenge - "Reverse APIs"</A>. Well done for making it this far!<SPAN>&nbsp;</SPAN><span class="lia-unicode-emoji" title=":party_popper:">🎉</span></P><H2 id="toc-hId-1021274013">Background</H2><P>In the tasks in this challenge so far you've encountered, amongst other things, actions and functions. But all of those actions and functions you've had to define and write implementations for ... have been<SPAN>&nbsp;</SPAN><EM>unbound</EM>, i.e. not bound to a specific instance of an entity. The Capire section<SPAN>&nbsp;</SPAN><A href="https://cap.cloud.sap/docs/cds/cdl#actions" target="_blank" rel="nofollow noopener noreferrer">Custom Actions and Functions</A><SPAN>&nbsp;</SPAN>is relevant here. Think of these types of actions and functions as being at the service level (vaguely like static methods in OO).</P><P>With that section there's a subsection<SPAN>&nbsp;</SPAN><A href="https://cap.cloud.sap/docs/cds/cdl#bound-actions" target="_blank" rel="nofollow noopener noreferrer">Bound Actions and Functions</A><SPAN>&nbsp;</SPAN>which describe actions and functions that can be defined to be in the context of an entity (to continue the vague OO analogy, these are like instance methods).</P><P>In this task you'll define a bound function, and (will be encouraged to) use destructuring to determine the implicit binding parameter (this binding parameter can also be modelled explicitly but we won't be doing that as it's far less common).</P><H3 id="toc-hId-953843227">Defining a bound function</H3><P>Check the<SPAN>&nbsp;</SPAN><A href="https://cap.cloud.sap/docs/cds/cdl#bound-actions" target="_blank" rel="nofollow noopener noreferrer">Capire docs</A><SPAN>&nbsp;</SPAN>to learn how to define a bound function, in CDL. It involves declaring an<SPAN>&nbsp;</SPAN>actions<SPAN>&nbsp;</SPAN>block as a continuation of the entity definition to which you want your function bound. Note that despite the block having the name<SPAN>&nbsp;</SPAN>actions, it is for containing definitions of both bound actions<SPAN>&nbsp;</SPAN><EM>and</EM><SPAN>&nbsp;</SPAN>functions.</P><H3 id="toc-hId-757329722">Implementing a bound function</H3><P>Implementing a bound action or function is pretty much the same as implementing an unbound one. The only difference really is that you need to get the value of the binding parameter, i.e. the key that the infrastructure gives your handler to point to the specific instance of the entity in the context of which the bound action or function is being called.</P><P>Here's the difference, using the Northbreeze service, served via the OData adapter, at the default path. First, let's remind ourselves of how an unbound function is called, which is like this - note the absence of any entity name or key:</P><DIV class=""><PRE>/odata/v4/northbreeze/unboundFunction()</PRE></DIV><P>Now, a bound function is called like this - note the function name follows the path of a specific entity:</P><DIV class=""><PRE>/odata/v4/northbreeze/Products(42)/boundFunction()</PRE></DIV><P>or (using the OData V4<SPAN>&nbsp;</SPAN><A href="https://docs.oasis-open.org/odata/odata/v4.01/os/part2-url-conventions/odata-v4.01-os-part2-url-conventions.html#_Toc31360937" target="_blank" rel="nofollow noopener noreferrer">key-as-segment</A><SPAN>&nbsp;</SPAN>approach) like this:</P><DIV class=""><PRE>/odata/v4/northbreeze/Products/42/boundFunction()</PRE></DIV><P>The value<SPAN>&nbsp;</SPAN>42<SPAN>&nbsp;</SPAN>is the value of the binding parameter that you need to implement such a bound function. Where is that? It's available in the incoming<SPAN>&nbsp;</SPAN><A href="https://cap.cloud.sap/docs/node.js/events#cds-request" target="_blank" rel="nofollow noopener noreferrer">request</A>, specifically in the<SPAN>&nbsp;</SPAN><A href="https://cap.cloud.sap/docs/node.js/events#params" target="_blank" rel="nofollow noopener noreferrer">params</A><SPAN>&nbsp;</SPAN>property.</P><P>In order to retrieve the value, you'll need to grab it from the request object. How you do that is of course up to you, but I'd encourage you to try it in the "normal" way of a dotted path notation from<SPAN>&nbsp;</SPAN>req, for example:</P><DIV class=""><PRE><SPAN class="">const</SPAN> <SPAN class="">ID</SPAN> <SPAN class="">=</SPAN> <SPAN class="">req</SPAN><SPAN class="">.</SPAN><SPAN class="">params</SPAN><SPAN class="">[</SPAN><SPAN class="">0</SPAN><SPAN class="">]</SPAN><SPAN class="">.</SPAN><SPAN class="">ProductID</SPAN></PRE></DIV><P>but also using a<SPAN>&nbsp;</SPAN><A href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment" target="_blank" rel="nofollow noopener noreferrer">destructuring assignment</A><SPAN>&nbsp;</SPAN>in the actual function signature, i.e.</P><DIV class=""><PRE><SPAN class="">async</SPAN> <SPAN class="">(</SPAN><SPAN class="">&lt;</SPAN><SPAN class="">SOME-DESTRUCTURING-ASSIGNMENT-HERE</SPAN><SPAN class="">&gt;</SPAN>) =<SPAN class="">&gt;</SPAN> <SPAN class="">{</SPAN> ... <SPAN class="">}</SPAN></PRE></DIV><P>Remember also that you'll probably want to re-check the details of the<SPAN>&nbsp;</SPAN><A href="https://pages.github.tools.sap/cap/docs/node.js/core-services#srv-on-request" target="_blank" rel="noopener nofollow noreferrer">srv.on</A><SPAN>&nbsp;</SPAN>request, as you'll want to include the<SPAN>&nbsp;</SPAN>Products<SPAN>&nbsp;</SPAN>entity name in that incantation in the optional<SPAN>&nbsp;</SPAN>entity?<SPAN>&nbsp;</SPAN>position:</P><DIV class=""><PRE><SPAN class="">function</SPAN> <SPAN class="">srv</SPAN><SPAN class="">.</SPAN><SPAN class="">on</SPAN> <SPAN class="">(</SPAN><SPAN class="">event</SPAN><SPAN class="">,</SPAN> <SPAN class="">entity</SPAN>?<SPAN class="">,</SPAN> <SPAN class="">handler</SPAN>: <SPAN class="">(</SPAN>
  <SPAN class="">req</SPAN>  : <SPAN class="">cds</SPAN><SPAN class="">.</SPAN><SPAN class="">Request</SPAN><SPAN class="">,</SPAN>
  <SPAN class="">next</SPAN> : <SPAN class="">function</SPAN>
<SPAN class="">)</SPAN><SPAN class="">)</SPAN></PRE></DIV><H2 id="toc-hId-431733498">The requirements</H2><P>Here are the specific requirements for this task.</P><P>Define a bound function called<SPAN>&nbsp;</SPAN>stockValue<SPAN>&nbsp;</SPAN>on the<SPAN>&nbsp;</SPAN>Products<SPAN>&nbsp;</SPAN>entity in your Northbreeze service. This should return an integer value being the value of the bound product's stock, which should be calculated as the product's<SPAN>&nbsp;</SPAN>UnitPrice<SPAN>&nbsp;</SPAN>multiplied by its<SPAN>&nbsp;</SPAN>UnitsInStock. For example, for product<SPAN>&nbsp;</SPAN><A href="https://qmacro.cfapps.eu10.hana.ondemand.com/northbreeze/Products/1" target="_blank" rel="nofollow noopener noreferrer">Chai</A>:</P><DIV class=""><PRE>{
  <SPAN class="">"@odata.context"</SPAN>: <SPAN class=""><SPAN class="">"</SPAN>$metadata#Products/$entity<SPAN class="">"</SPAN></SPAN>,
  <SPAN class="">"ProductID"</SPAN>: <SPAN class="">1</SPAN>,
  <SPAN class="">"ProductName"</SPAN>: <SPAN class=""><SPAN class="">"</SPAN>Chai<SPAN class="">"</SPAN></SPAN>,
  <SPAN class="">"QuantityPerUnit"</SPAN>: <SPAN class=""><SPAN class="">"</SPAN>10 boxes x 20 bags<SPAN class="">"</SPAN></SPAN>,
  <SPAN class="">"UnitPrice"</SPAN>: <SPAN class="">18</SPAN>,
  <SPAN class="">"Category_CategoryID"</SPAN>: <SPAN class="">1</SPAN>,
  <SPAN class="">"Supplier_SupplierID"</SPAN>: <SPAN class="">1</SPAN>,
  <SPAN class="">"UnitsInStock"</SPAN>: <SPAN class="">39</SPAN>,
  <SPAN class="">"UnitsOnOrder"</SPAN>: <SPAN class="">0</SPAN>,
  <SPAN class="">"ReorderLevel"</SPAN>: <SPAN class="">10</SPAN>,
  <SPAN class="">"Discontinued"</SPAN>: <SPAN class="">false</SPAN>
}</PRE></DIV><P>the stock value is 702 (18 x 39).</P><H2 id="toc-hId-235219993">Submitting to the TESTER</H2><P>Now you're ready to submit your CANDIDATE service, with this new API endpoint, to the TESTER!</P><H3 id="toc-hId-167789207">The payload</H3><P>The task identifier you need to supply in the payload of your submission is:<SPAN>&nbsp;</SPAN><STRONG>northbreeze-stockValue</STRONG>.</P><P>You'll have already done this sort of thing<SPAN>&nbsp;</SPAN><A href="https://community.sap.com/t5/application-development-discussions/july-developer-challenge-quot-reverse-apis-quot-task-1-your-first-service/m-p/13752205" target="_blank">previously</A><SPAN>&nbsp;</SPAN>so just head back there for the more detailed instructions if you need them, or to the the section titled "<A href="https://community.sap.com/t5/application-development-blog-posts/2024-07-quot-reverse-apis-quot-sap-developer-challenge/ba-p/13749653#toc-hId--553513390" target="_blank">The Tester service, and making a test request</A>" in the<SPAN>&nbsp;</SPAN><A href="https://community.sap.com/t5/application-development-blog-posts/2024-07-quot-reverse-apis-quot-sap-developer-challenge/ba-p/13749653" target="_blank">main challenge blog post</A>.</P><P>You'll need to submit a JSON payload like this:</P><DIV class=""><PRE>{
  <SPAN class="">"communityid"</SPAN>: <SPAN class=""><SPAN class="">"</SPAN>&lt;your-community-id&gt;<SPAN class="">"</SPAN></SPAN>,
  <SPAN class="">"serviceurl"</SPAN>: <SPAN class=""><SPAN class="">"</SPAN>&lt;the-URL-of-your-service&gt;<SPAN class="">"</SPAN></SPAN>,
  <SPAN class="">"task"</SPAN>: <SPAN class=""><SPAN class="">"</SPAN>northbreeze-stockValue<SPAN class="">"</SPAN></SPAN>
}</PRE></DIV><P>And, just as with the previous (and all further tasks):</P><UL><LI><P>the value for the<SPAN>&nbsp;</SPAN>communityid<SPAN>&nbsp;</SPAN>property should be your ID on this SAP Community platform (e.g. mine is "qmacro")</P></LI><LI><P>the value for the<SPAN>&nbsp;</SPAN>serviceurl<SPAN>&nbsp;</SPAN>property should be the absolute URL (i.e. including the scheme), of your CANDIDATE<SPAN>&nbsp;</SPAN><STRONG>service</STRONG><SPAN>&nbsp;</SPAN>which<SPAN>&nbsp;</SPAN><EM>contains</EM><SPAN>&nbsp;</SPAN>the API endpoint (see<SPAN>&nbsp;</SPAN><A href="https://community.sap.com/t5/application-development-blog-posts/2024-07-quot-reverse-apis-quot-sap-developer-challenge/ba-p/13749653#toc-hId--356999885" target="_blank"><span class="lia-unicode-emoji" title=":information:">ℹ️</span><SPAN>&nbsp;</SPAN>A note on URLs and services</A>).</P></LI></UL><P>That's it!</P><H2 id="toc-hId--157807017">Logging of test results</H2><P>Remember that you can check on your progress, and the progress of your fellow participants - all requests are logged and are available in an entity set served by the TESTER service. The entity set URL is<SPAN>&nbsp;</SPAN><A href="https://developer-challenge-2024-07.cfapps.eu10.hana.ondemand.com/tester/Testlog" target="_blank" rel="nofollow noopener noreferrer">https://developer-challenge-2024-07.cfapps.eu10.hana.ondemand.com/tester/Testlog</A><SPAN>&nbsp;</SPAN>and being an OData V4 entity set, all the normal OData system query options are available to you for digging into that information.</P><P>If you have any questions or comments, leave them below!</P>
