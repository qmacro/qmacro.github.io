2018-10-16-set-up-vs-code-on-chrome-os-for-local-application-programming-model
Set up VS Code on Chrome OS for local Application Programming Model development
technology-blog-sap
2018-10-16
https://community.sap.com/t5/technology-blogs-by-sap/set-up-vs-code-on-chrome-os-for-local-application-programming-model/ba-p/13377868
<EM>In this post I walk through the process I used to set up a development environment for CAP on my Chromebook.</EM><BR />
<BR />
(See the <A href="#updates" target="_blank" rel="nofollow noopener noreferrer">Updates</A> section end of this post for a couple of notes on things that have changed since this content was published.)<BR />
<BR />
I'm a big fan of Chrome OS, it's my primary choice for computing for many reasons including high security, consistency, efficiency and practicality. I have a lot of devices running it - a Google Pixelbook as well as an older Samsung Chromebook, an ASUS Chromebit and a shiny new ASUS Chromebox - the N005U. I even have a version of Chrome OS running on my old iMac 24", via Neverware's <A href="https://www.neverware.com/" target="_blank" rel="nofollow noopener noreferrer">CloudReady</A>&nbsp;system.<BR />
<BR />
The advent of beta support for Linux on Chrome OS is very interesting and an opportunity for me to try out running Visual Studio Code (VSCode) locally. I wasn't disappointed.<BR />
<BR />
I'm also very interested in the Application Programming Model for SAP Cloud Platform, and its agnostic approach to development environments and deployment targets &amp; runtimes. I installed the cds tool and the extension for VSCode to get a feel for local development with the model on Chrome OS. This post is a brief account of the steps I took, in case you want to do that also.<BR />
<BR />
&nbsp;<BR />
<BR />
<STRONG>Turning on Linux support</STRONG><BR />
<BR />
Initially only in the Chrome OS beta channel, the support for Linux, at least on my Pixelbook and Chromebox is now also available on the stable channel. That said, I use the beta channel on both of these devices, in case you're wondering.<BR />
<BR />
Turning it on is simply a matter of a single click in the settings, whereupon a Linux container will be downloaded and started up:<BR />
<BR />
<IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2018/10/Screenshot-2018-10-16-at-15.22.18.png" /><BR />
<BR />
&nbsp;<BR />
<BR />
A short while later, a lovely calming terminal appears, the sign for me of a real operating system. This signals the successful completion of the process:<BR />
<BR />
<IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2018/10/Screenshot-2018-10-16-at-17.23.16.png" /><BR />
<BR />
&nbsp;<BR />
<BR />
<STRONG>Installing VS Code and CDS Language Support</STRONG><BR />
<BR />
(See the end of this post for an update on this.)<BR />
<BR />
VS Code is available for different platforms from the "<A href="https://code.visualstudio.com/download" target="_blank" rel="nofollow noopener noreferrer">Download Visual Studio Code</A>" page. As the image is Debian GNU/Linux 9 (you can see this in the /etc/issue file), I chose the 64 bit .deb file. At the time of writing, this is&nbsp;code_1.28.1-1539281690_amd64.deb reflecting VS Code version 1.28.<BR />
<BR />
While I was in download mode, I went to the <A href="https://tools.hana.ondemand.com/#cloud" target="_blank" rel="nofollow noopener noreferrer">SAP Development Tools for Cloud</A> download page and downloaded the official CDS Language Support feature for VS Code:<BR />
<BR />
<IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2018/10/Screenshot-2018-10-16-at-17.34.56.png" /><BR />
<BR />
Note that as the Linux support is via a container, you have to transfer downloaded files to it. The File Manager makes this easy. I just dragged the two downloaded files into the "Linux files" folder that represents the home directory of "qmacro" (my Google ID) in the terminal above:<BR />
<BR />
<IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2018/10/Screenshot-2018-10-16-at-15.51.41.png" height="383" width="485" /><BR />
<BR />
&nbsp;<BR />
<BR />
You can install Linux packages like the .deb file very easily, by using the file's context menu item "Install with Linux (Beta)". I did this for the VS Code package:<BR />
<BR />
<IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2018/10/Screenshot-2018-10-16-at-15.52.15.png" height="434" width="494" /><BR />
<BR />
and in a short time received a notification that the install had completed:<BR />
<BR />
<IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2018/10/Screenshot-2018-10-16-at-15.53.45.png" /><BR />
<BR />
I then had a new icon in the tray:<BR />
<BR />
<IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2018/10/Screenshot-2018-10-16-at-15.54.01.png" height="173" width="507" /><BR />
<BR />
I started VS Code up and used the instructions on the SAP Development Tools for Cloud download page (see above screenshot - basically following "step 3") to install the CDS Language Support extension directly from the VSIX file.<BR />
<BR />
So far so good!<BR />
<BR />
&nbsp;<BR />
<BR />
<STRONG>Install other extensions</STRONG><BR />
<BR />
I installed a couple of other VSCode extensions, but these aren't essential. I'm a big vim user, so I use the Vim extension for VSCode, and I also installed the SQLite extension for comfortable in-IDE browsing of SQLite databases.<BR />
<BR />
<IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2018/10/Screenshot-2018-10-16-at-19.49.32.png" /><BR />
<BR />
&nbsp;<BR />
<BR />
<STRONG>Installing Node.js</STRONG><BR />
<BR />
Next I needed to install Node.js. There are many ways to do this, but I find the <A href="https://github.com/creationix/nvm" target="_blank" rel="nofollow noopener noreferrer">Node Version Manager</A> (nvm) to be very useful, and it has a nice side effect of preventing you from getting into a tangle with root privilege requirements - everything you do in Node.js installations via nvm should *not* require the use of root (sudo) so you can't shoot yourself in the foot.<BR />
<BR />
In the Linux terminal, I used the curl-based installation approach described on the nvm GitHub repository homepage:<BR />
<PRE><CODE>curl -o- <A href="https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh" target="test_blank" rel="nofollow noopener noreferrer">https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh</A> <SPAN class="pl-k">|</SPAN> bash</CODE></PRE><BR />
and after a few seconds I was ready to use nvm to install version 8 of Node.js, which I did like this:<BR />
<PRE><CODE>nvm install 8</CODE></PRE><BR />
Simple! That gave me node version 8.12.0 and npm version 6.4.1.<BR />
<BR />
&nbsp;<BR />
<BR />
<STRONG>Installing the cds tool</STRONG><BR />
<BR />
(See the end of this post for an update on this.)<BR />
<BR />
CDS is at the heart of the Application Programming Model and there's command line support in the form of a tool called 'cds' in the '@sap' npm namespace, available from the SAP NPM registry. Read more about this registry in this post by&nbsp;<SPAN class="mention-scrubbed">sven.kohlhaas</SPAN>&nbsp;"<A href="https://blogs.sap.com/2017/05/16/sap-npm-registry-launched-making-the-lives-of-node.js-developers-easier/" target="_blank" rel="noopener noreferrer">SAP NPM Registry launched: Making the lives of Node.js developers easier</A>".<BR />
<BR />
To make use of the '@sap' namespaced modules, it's necessary to tell npm about this registry:<BR />
<PRE><CODE>npm config set&nbsp;@sap:registry <A href="https://npm.sap.com" target="test_blank" rel="noopener noreferrer">https://npm.sap.com</A></CODE></PRE><BR />
Now we can install the cds tool. I did it globally, rather than for a specific Node.js project. Note that because of the nice side effect of nvm mentioned earlier, globally still means within my user space:<BR />
<PRE><CODE>npm i -g&nbsp;@sap/cds</CODE></PRE><BR />
That's the cds tool installed.<BR />
<BR />
If you're following the SAP TechEd related set of exercises that I mentioned in "<A href="https://blogs.sap.com/2018/10/10/application-programming-model-start-here/" target="_blank" rel="noopener noreferrer">Application Programming Model for SAP Cloud Platform â€“ start here</A>", then you probably also want to explicitly install the cds generator too:<BR />
<PRE><CODE>npm i -g @sap/generator-cds</CODE></PRE><BR />
&nbsp;<BR />
<BR />
<STRONG>All set!</STRONG><BR />
<BR />
At this point, I'm all set, and if you've been following along, you are too!<BR />
<BR />
We've got a lovely local development environment for the Application Programming Model, on a proper operating system, with great tools and a competent IDE with rich support for the CDS work we'll be doing.<BR />
<BR />
<IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2018/10/DpppwFfW0AAq-MU.jpg" /><BR />
<BR />
If you're wondering what to do next, you might want to try the exercises in the GitHub repository "<A href="https://github.com/SAP/cloud-sample-spaceflight-node" target="_blank" rel="nofollow noopener noreferrer">SAP/cloud-sample-spaceflight-node</A>" - happy hacking!<BR />
<BR />
&nbsp;<BR />
<BR />
<STRONG><A name="updates" target="_blank"></A>Updates</STRONG><BR />
<BR />
2020-09-28 Since the publication of this post, a couple of things have changed. First, you can get the VS Code Extension for CAP directly from the Visual Studio Marketplace, see the <A href="https://cap.cloud.sap/docs/releases/july20" target="_blank" rel="nofollow noopener noreferrer">July 2020 CAP Release Notes</A> for details. Also, the Node.js packages for CAP are now in the public NPM registry, and the main wrapper package for development is <A href="https://www.npmjs.com/search?q=sap%2Fcds-dk" target="_blank" rel="nofollow noopener noreferrer">@sap/cds-dk</A>. This means that to install CAP for Node.js globally, all you need to do is: <CODE>run npm i -g <a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1387241">@Sisn</a>/cds-dk</CODE>.
