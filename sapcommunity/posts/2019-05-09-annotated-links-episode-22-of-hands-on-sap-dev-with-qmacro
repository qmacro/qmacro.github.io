2019-05-09-annotated-links-episode-22-of-hands-on-sap-dev-with-qmacro
Annotated links: Episode 22 of Hands-on SAP dev with qmacro
technology-blog-sap
2019-05-09
https://community.sap.com/t5/technology-blogs-by-sap/annotated-links-episode-22-of-hands-on-sap-dev-with-qmacro/ba-p/13407297
<EM>This is a searchable description of the content of a live stream recording, specifically <STRONG>"Episode 22 - Live stream community share â€“ dotfiles and Google Cloud Run goodness"</STRONG> in the "<A href="https://bit.ly/handsonsapdev" target="_blank" rel="nofollow noopener noreferrer">Hands-on SAP dev with qmacro</A>" series. There are links directly to specific highlights in the video recording. For links to annotations of other episodes, please see the "<A href="https://bit.ly/handsonsapdev#replays" target="_blank" rel="nofollow noopener noreferrer">Catch the replays</A>" section of the series blog post.</EM><BR />
<BR />
This episode, titled "<A href="https://bit.ly/handsonsapdev#ep22" target="_blank" rel="nofollow noopener noreferrer">Live stream community share â€“ dotfiles and Google Cloud Run goodness</A>", was streamed live on Wed 01 May 2019 and is approximately one hour in length. The stream recording is <A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0" target="_blank" rel="nofollow noopener noreferrer">available on YouTube</A>.<BR />
<BR />
<IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/05/Screen-Shot-2019-05-09-at-17.29.27.png" /><BR />
<BR />
Below is a brief synopsis, and links to specific highlights - use these links to jump directly to particular places of interest in the recording, based on 'hh:mm:ss' style timestamps.<BR />
<H2 id="brief-synopsis" id="toc-hId-928949815">Brief synopsis</H2><BR />
In this midweek episode we enjoy a little off piste activity with two special guests from the #HandsOnSAPDev community. Ronnie Sletta describes his setup and takes us through his dotfiles for new machine setups, and Nabheet Madan shows us how he deployed a CAP project to Google Cloud Run.<BR />
<H2 id="links-to-specific-highlights" id="toc-hId-732436310">Links to specific highlights</H2><BR />
<STRONG><A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h02m05s" target="_blank" rel="nofollow noopener noreferrer">00:02:05</A>:</STRONG> Drawing our attention to <A href="https://twitter.com/scottdillon1" target="_blank" rel="nofollow noopener noreferrer">Scott Dillon</A> who runs a regular series of "Garage" online sessions on SAP Cloud Platform technical topics. You can find out more at his <A href="http://whyscp.com/wp/scp-garage-scott-dillons-technical-workshops/" target="_blank" rel="nofollow noopener noreferrer">WhySCP</A> page and the recordings of the sessions are available in a YouTube playlist <A href="https://www.youtube.com/playlist?list=PLWV533hWWvDnWRZAUjcDvwlGJ-0npJxlL" target="_blank" rel="nofollow noopener noreferrer">SAP Cloud Platform in the Garage</A> on the <A href="https://www.youtube.com/channel/UC8cXSTGDhiZK5229zi-KTXA" target="_blank" rel="nofollow noopener noreferrer">SAP Technology</A> channel. Great stuff!<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h03m36s" target="_blank" rel="nofollow noopener noreferrer">00:03:36</A>:</STRONG> Pointing out another coding live streamer, <A href="https://twitter.com/brendoneus" target="_blank" rel="nofollow noopener noreferrer">Brendan Enrick</A> who streams live on Twitch with the <A href="https://twitch.tv/devchatter" target="_blank" rel="nofollow noopener noreferrer">DevChatter</A> handle. All sorts of interesting stuff and right now he's building something that will help folks like you and me find other code based live streams. Definitely worth following.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h04m28s" target="_blank" rel="nofollow noopener noreferrer">00:04:28</A>:</STRONG> Mentioning an update to SAP Web IDE relating to building Node.js based CAP apps - see the blog post <A href="https://blogs.sap.com/2019/04/29/develop-business-services-with-node.js-in-sap-web-ide/" target="_blank" rel="noopener noreferrer">Develop Business Services with Node.js in SAP Web IDE</A> by <SPAN class="mention-scrubbed">liat.borenshtein#overview</SPAN> for more info.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h07m15s" target="_blank" rel="nofollow noopener noreferrer">00:07:15</A>:</STRONG> Introducing today's guests <SPAN class="mention-scrubbed">rsletta</SPAN> and <SPAN class="mention-scrubbed">nabheet.madan3</SPAN>, and dialling in Ronnie to the stream.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h08m50s" target="_blank" rel="nofollow noopener noreferrer">00:08:50</A>:</STRONG> Ronnie introduces himself and what he's going to be showing us, with some background about how he uses virtual machines and spins them up at a moment's notice - which means that he's had to come up with a solution for automating some of the post-creation setup, using dotfiles and shell scripts. Cross platform too!<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h15m10s" target="_blank" rel="nofollow noopener noreferrer">00:15:10</A>:</STRONG> Ronnie switches over to show his screen, and explains dotfiles, giving us examples from his own set, including <CODE>.vimrc</CODE>, <CODE>.tmux.conf</CODE> and - possibly the most important here - <CODE>.bashrc</CODE> (which differs from <CODE>.bash_profile</CODE> as described in <A href="https://apple.stackexchange.com/questions/51036/what-is-the-difference-between-bash-profile-and-bashrc" target="_blank" rel="nofollow noopener noreferrer">this StackExchange post</A>).<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h22m58s" target="_blank" rel="nofollow noopener noreferrer">00:22:58</A>:</STRONG> There's also a <CODE>.functions</CODE> file that allows Ronnie to keep his code and setup nice and modular. In a similar way, there are also the <CODE>.aliases</CODE> and <CODE>.nvm_path</CODE> files.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h23m19s" target="_blank" rel="nofollow noopener noreferrer">00:23:19</A>:</STRONG> <A href="https://twitter.com/tiagobalmeida" target="_blank" rel="nofollow noopener noreferrer">Tiago</A> asks about the VS Code extension that Ronnie is using to show the commit info in-line with the file content - and answered directly in the chat by Nabheet - it's <A href="https://gitlens.amod.io/" target="_blank" rel="nofollow noopener noreferrer">GitLens</A>.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h24m20s" target="_blank" rel="nofollow noopener noreferrer">00:24:20</A>:</STRONG> Ronnie uses <A href="https://github.com/creationix/nvm" target="_blank" rel="nofollow noopener noreferrer">nvm</A> to manage his Node.js installations; this is a great way to do it - and we've seen its use also in a previous episode in this series. One bonus of using <CODE>nvm</CODE> is that you can install and manage Node.js without needing root access. If you're in charge of your own VMs that is not so much of an issue, but it's nice to know you can be independent of any BOFHs! <span class="lia-unicode-emoji" title=":slightly_smiling_face:">ðŸ™‚</span><BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h24m55s" target="_blank" rel="nofollow noopener noreferrer">00:24:55</A>:</STRONG> Starting to look at Ronnie's <CODE>.bash_profile</CODE> which has all sorts of goodness, including platform specific logic. He has taken some of the content from others, which is a great way to bootstrap your shell skills. The references he gives are in his repo's README. In fact all the code Ronnie is showing is available online in the repo, which is here: <A class="uri" href="https://github.com/rsletta/dotfiles" target="_blank" rel="nofollow noopener noreferrer">https://github.com/rsletta/dotfiles</A>.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h28m20s" target="_blank" rel="nofollow noopener noreferrer">00:28:20</A>:</STRONG> Moving on now to the real star of the repo, which is the <CODE>bootstrap.sh</CODE> script. Ronnie talks about how he came to write this, and why. At this point we dig in deeper with a demo where Ronnie uses his iPad as a terminal, using an SSH client (<A href="https://www.blink.sh/" target="_blank" rel="nofollow noopener noreferrer">Blink Shell</A> and shows us how he sets up a newly minted (but otherwise bare) virtual machine.<BR />
<BR />
He follows the instructions in his repo's README which is essentially to clone the repo, and run the <CODE>bootstrap.sh</CODE> script:<BR />
<PRE class="shell"><CODE>git clone <A href="https://github.com/rsletta/dotfiles.git" target="test_blank" rel="nofollow noopener noreferrer">https://github.com/rsletta/dotfiles.git</A> &lt;DIRECTORY_NAME&gt; &amp;&amp; cd &lt;DIRECTORY_NAME&gt; &amp;&amp; ./bootstrap.sh</CODE></PRE><BR />
Running this script sets up lots of different things, including Node.js itself and of course the <CODE><a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1387241">@Sisn</a>/cds</CODE> package!<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h33m25s" target="_blank" rel="nofollow noopener noreferrer">00:33:25</A>:</STRONG> At this stage, the shell's prompt is nice and attractive and informative, and he can jump into <CODE>tmux</CODE> and <CODE>vim</CODE> to finalise the setup (for example of the Vim plugins). All done!<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h34m20s" target="_blank" rel="nofollow noopener noreferrer">00:34:20</A>:</STRONG> Ronnie encourages you to go into the repo and check out what's inside of the platform specific scripts <CODE>macOS.sh</CODE> and <CODE>Ubuntu.sh</CODE>. So what are you waiting for? <span class="lia-unicode-emoji" title=":winking_face:">ðŸ˜‰</span><BR />
<BR />
Thanks Ronnie!<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h35m30s" target="_blank" rel="nofollow noopener noreferrer">00:35:30</A>:</STRONG> Ronnie shares with us a quick reminder of <A href="https://wiki.scn.sap.com/wiki/display/events/SAP+Inside+Track+Oslo+-+17+August+2019" target="_blank" rel="noopener noreferrer">SAP Inside Track OSLO</A> which is on 17 Aug 2019. Head on over to the homepage for more info!<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h36m50s" target="_blank" rel="nofollow noopener noreferrer">00:36:50</A>:</STRONG> Now it's time to bring Nabheet onto the stream. After being dialled in, Nabheet introduces himself and sets the scene for what he's going to show us. He's written it all up in a blog post too, which you can read here: <A href="https://blogs.sap.com/2019/04/26/capm-meet-google-cloud-run-serverless-containers/" target="_blank" rel="noopener noreferrer">CAPM meet Google Cloud Run â€“ Serverless Containers</A>.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h38m40s" target="_blank" rel="nofollow noopener noreferrer">00:38:40</A>:</STRONG> Nabheet highlights <SPAN class="mention-scrubbed">lsubatin</SPAN>'s blog post <A href="https://blogs.sap.com/2019/04/13/post-google-next-19-curiosity-playing-with-cloud-run-and-sap-hana/" target="_blank" rel="noopener noreferrer">Post Google Next '19 curiosity - Playing with Cloud Run and HANA</A> which got him started on this particular journey of discovery of deploying a CAP app to the Google Cloud and running it there.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h40m30s" target="_blank" rel="nofollow noopener noreferrer">00:40:30</A>:</STRONG> He also highlights his series of posts <A href="https://blogs.sap.com/2019/02/08/helloworld-sapui5-meets-kubernetes-containers/" target="_blank" rel="noopener noreferrer">#HelloWorld SAPUI5 meets Kubernetes - Containers</A> (a series which also contains a post from Ronnie - nice teamwork!), thinking about progressing to serverless functions to serverless containers ... and Google Cloud Run is about scaled serverless containers.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h41m55s" target="_blank" rel="nofollow noopener noreferrer">00:41:55</A>:</STRONG> Nabheet describes his starting point with a CAP app based on the tutorial <A href="https://developers.sap.com/tutorials/cp-apm-nodejs-create-service.html" target="_blank" rel="noopener noreferrer">Create a Business Service with Node.js using Visual Studio Code</A> on <A href="https://developers.sap.com" target="_blank" rel="noopener noreferrer">developers.sap.com</A>. The plan is first to deploy it to Google Cloud and run it "locally" in that it will be run from the Google Cloud Shell, and then build a container image and deploy &amp; run that.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h42m42s" target="_blank" rel="nofollow noopener noreferrer">00:42:42</A>:</STRONG> And now it's demo time, where Nabheet shows us the new Cloud Run feature in the Google Cloud Platform console.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h44m25s" target="_blank" rel="nofollow noopener noreferrer">00:44:25</A>:</STRONG> Looking at the Google Cloud Shell (of which I'm a big fan and user too) - a browser accessible shell environment which gives you a pretty decent environment with many of the tools you expect, plus the <CODE>gcloud</CODE> tool, and a 5GB filesystem which persists (so you can install other tools there* and store files too).<BR />
<BR />
* There's a new feature, still in alpha, which now allows you to <A href="https://console.cloud.google.com/cloudshell/environment/view" target="_blank" rel="nofollow noopener noreferrer">define your own build instructions for the image that is used for Google Cloud Shell</A>.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h46m03s" target="_blank" rel="nofollow noopener noreferrer">00:46:03</A>:</STRONG> Nabheet shows us that as well as regular tools such as the Vim editor, Google Cloud Shell has a web-based IDE too, which you can invoke with a button or from the command line with the <CODE>edit</CODE> command. Lucia had referred to this in the chat too.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h47m35s" target="_blank" rel="nofollow noopener noreferrer">00:47:35</A>:</STRONG> Running the CAP app locally, with <CODE>cds run</CODE>, and we see, as expected, the service is available on <A class="uri" href="http://localhost:4004" target="_blank" rel="nofollow noopener noreferrer">http://localhost:4004</A>. This port on the Google Cloud Shell is proxied so it can be accessed directly from the browser ... but how does this actually work?<BR />
<BR />
There's a bit of Google magic here at play that I think we missed, and during the playback just now (while I write these annotations) I looked into it. Nabheet clicked on the <A class="uri" href="http://localhost:4004" target="_blank" rel="nofollow noopener noreferrer">http://localhost:4004</A> link and what actually happened is that that link (which is made available in the shell to us via an HTML5 link) was actually a link to this URL:<BR />
<PRE><CODE><A href="https://ssh.cloud.google.com/devshell/proxy?authuser=0&amp;port=4004" target="test_blank" rel="nofollow noopener noreferrer">https://ssh.cloud.google.com/devshell/proxy?authuser=0&amp;port=4004</A></CODE></PRE><BR />
This seems to be a generic service that will cause ports to be automatically proxied by what appears to be a Google App Engine based service (I'm assuming that from the resulting URL which includes the giveaway string <CODE>appspot</CODE>). In my experiment just now, doing what Nabheet did, the end URL is:<BR />
<PRE><CODE><A href="https://4004-dot-3208420-dot-devshell.appspot.com/?authuser=0" target="test_blank" rel="nofollow noopener noreferrer">https://4004-dot-3208420-dot-devshell.appspot.com/?authuser=0</A></CODE></PRE><BR />
Nice!<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h47m50s" target="_blank" rel="nofollow noopener noreferrer">00:47:50</A>:</STRONG> So at this stage we see the familiar "Welcome to cds.service" page in the browser, showing that the CAP app is running successfully ... in Nabheet's Google Cloud Shell.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h48m10s" target="_blank" rel="nofollow noopener noreferrer">00:48:10</A>:</STRONG> So now it's time to create a container image. Here is the build command that Nabheet used, referring to the "capm3" image definition:<BR />
<PRE class="shell"><CODE>gcloud builds submit --tag gcr.io/steel-signifier-225916/capm3</CODE></PRE><BR />
(the <CODE>steel-signifier-225916</CODE> is an identifier that is specific to Nabheet's session).<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h48m55s" target="_blank" rel="nofollow noopener noreferrer">00:48:55</A>:</STRONG> We have a quick look at the <CODE>Dockerfile</CODE> which contains the build instructions for the image, which is based on the <A href="https://hub.docker.com/_/node" target="_blank" rel="nofollow noopener noreferrer">official Node.js 10 image</A> which Lucia has also used (note that the contents of the file are in Nabheet's post mentioned earlier).<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h49m40s" target="_blank" rel="nofollow noopener noreferrer">00:49:40</A>:</STRONG> At this point the image has now been built (builds can be checked in the Cloud Build section of the console). So now it's time to deploy, with:<BR />
<PRE class="shell"><CODE>gcloud beta run deploy --image gcr.io/steel-signifier-225916/capm3</CODE></PRE><BR />
<STRONG><A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h52m00s" target="_blank" rel="nofollow noopener noreferrer">00:52:00</A>:</STRONG> Going to the Cloud Run section of the console we now see the new "capm3" service where we look briefly at the logs before accessing the CAP service that's running there, via this URL:<BR />
<PRE><CODE><A href="https://capm3-ngsx6q2qma-uc.a.run.app" target="test_blank" rel="nofollow noopener noreferrer">https://capm3-ngsx6q2qma-uc.a.run.app</A></CODE></PRE><BR />
There's a small issue with the service URLs not appearing below the "Welcome to cds.services" but they are available all the same, via the usual paths, and we can retrieve the book and author entities via OData query operations as usual.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=10NnzXZLjTQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h52m18s" target="_blank" rel="nofollow noopener noreferrer">00:52:18</A>:</STRONG> Nabheet points out that there are <A href="https://github.com/GoogleCloudPlatform/cloud-shell-tutorials" target="_blank" rel="nofollow noopener noreferrer">Cloud Shell tutorials on GitHub</A>, and you can run them interactively in the shell like this:<BR />
<PRE class="shell"><CODE>cloudshell launch-tutorial -d &lt;path-to-the-tutorials&gt;</CODE></PRE><BR />
Thanks Nabheet!<BR />
<BR />
I really enjoyed Ronnie and Nabheet's share of experimentation and knowledge - thanks so much again. Until next time!
