2019-05-09-annotated-links-episode-23-of-hands-on-sap-dev-with-qmacro
Annotated links: Episode 23 of Hands-on SAP dev with qmacro
technology-blog-sap
2019-05-09
https://community.sap.com/t5/technology-blogs-by-sap/annotated-links-episode-23-of-hands-on-sap-dev-with-qmacro/ba-p/13407272
<EM>This is a searchable description of the content of a live stream recording, specifically <STRONG>"Episode 23 - Digging in to the sitregcapm project"</STRONG> in the "<A href="https://bit.ly/handsonsapdev" target="_blank" rel="nofollow noopener noreferrer">Hands-on SAP dev with qmacro</A>" series. There are links directly to specific highlights in the video recording. For links to annotations of other episodes, please see the "<A href="https://bit.ly/handsonsapdev#replays" target="_blank" rel="nofollow noopener noreferrer">Catch the replays</A>" section of the series blog post.</EM><BR />
<BR />
This episode, titled "<A href="https://bit.ly/handsonsapdev#ep23" target="_blank" rel="nofollow noopener noreferrer">Digging in to the sitregcapm project</A>", was streamed live on Fri 03 May 2019 and is approximately one hour in length. The stream recording is <A href="https://www.youtube.com/watch?v=iettgjZyA2E&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0" target="_blank" rel="nofollow noopener noreferrer">available on YouTube</A>.<BR />
<BR />
<IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/05/Screen-Shot-2019-05-09-at-17.33.09.png" /><BR />
<BR />
Below is a brief synopsis, and links to specific highlights - use these links to jump directly to particular places of interest in the recording, based on 'hh:mm:ss' style timestamps.<BR />
<H2 id="brief-synopsis" id="toc-hId-928949748">Brief synopsis</H2><BR />
In this episode we take a closer look at the project to rewrite the SAP Event Registration app backend using CAP, in the form of the sitregcapm repo on GitHub.<BR />
<H2 id="links-to-specific-highlights" id="toc-hId-732436243">Links to specific highlights</H2><BR />
<STRONG><A href="https://www.youtube.com/watch?v=iettgjZyA2E&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h02m01s" target="_blank" rel="nofollow noopener noreferrer">00:02:01</A>:</STRONG> Highlighting another live streamer, David Poindexter, who goes by the moniker <A href="https://www.twitch.tv/roberttables" target="_blank" rel="nofollow noopener noreferrer">roberttables</A> on Twitch. It turns out that I've highlighted Robert before, in <A href="https://bit.ly/handsonsapdev#ep20" target="_blank" rel="nofollow noopener noreferrer">Ep.20</A>, but anyway, David is definitely someone you should follow on Twitch for all sorts of hardware and software activities.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iettgjZyA2E&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h04m15s" target="_blank" rel="nofollow noopener noreferrer">00:04:15</A>:</STRONG> Along the same theme of "re-highlighting", I also point out the list <A href="http://awesome.livecoders.dev" target="_blank" rel="nofollow noopener noreferrer">Awesome Developer Streams</A> which is full of lovely folks who stream on development topics.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iettgjZyA2E&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h05m10s" target="_blank" rel="nofollow noopener noreferrer">00:05:10</A>:</STRONG> Mentioning my colleague <SPAN class="mention-scrubbed">mariusobert</SPAN> and his great <A href="https://blogs.sap.com/tag/cloudfoundryfun/" target="_blank" rel="noopener noreferrer">Cloud Foundry Fun</A> series. While I do this, <SPAN class="mention-scrubbed">gregorw</SPAN> suggests that the ABAP topic is missing from the list of streamers! He's right. I think it would be awesome to see. Who's up for it - any volunteers? I can definitely help folks get set up for streaming, having gone through the process myself. But also, if you would just to come on as a guest here and show us some cool ABAP stuff, I'd love to host you - let me know!<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iettgjZyA2E&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h08m12s" target="_blank" rel="nofollow noopener noreferrer">00:08:12</A>:</STRONG> Looking briefly at <A href="http://sap.github.io/fundamental/" target="_blank" rel="nofollow noopener noreferrer">SAP Fiori Fundamentals</A>, a light-weight presentation layer for building Fiori apps in any web-based technology. The team run <A href="https://sap.github.io/fundamental/office-hours/" target="_blank" rel="nofollow noopener noreferrer">office hours</A> which are regular live sessions, the recordings of which are available on YouTube. Worth a visit!<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iettgjZyA2E&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h09m42s" target="_blank" rel="nofollow noopener noreferrer">00:09:42</A>:</STRONG> Next we turn our attention to some really exciting news from the VS Code team, in a <A href="https://twitter.com/code/status/1124071825451909120" target="_blank" rel="nofollow noopener noreferrer">tweet</A> highlighted by <SPAN class="mention-scrubbed">rsletta</SPAN> just before we started this stream. It's now possible to use a Docker container (or remote SSH host) with a local copy of VS Code. I think this is pretty darn good and a great set of facilities for an already very accomplished IDE.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iettgjZyA2E&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h11m30s" target="_blank" rel="nofollow noopener noreferrer">00:11:30</A>:</STRONG> This is definitely something worth looking into now, even for a quick peek. So that's what we do. Looking at the page linked from the tweet, we see it's the location in the Visual Studio Marketplace for this <A href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpack" target="_blank" rel="nofollow noopener noreferrer">Remote Development</A> extension.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iettgjZyA2E&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h13m50s" target="_blank" rel="nofollow noopener noreferrer">00:13:50</A>:</STRONG> This extension preview requires the <A href="https://code.visualstudio.com/insiders/" target="_blank" rel="nofollow noopener noreferrer">insiders</A> version of VS Code, so I'd blasted away my standard installation ready for this version instead. (I could have run both versions side by side, but I had been having some issues with one of the extensions (for SQLite) anyway so a clean reinstall couldn't harm, I figured).<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iettgjZyA2E&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h14m30s" target="_blank" rel="nofollow noopener noreferrer">00:14:30</A>:</STRONG> Installing the insiders version of VS Code, before attempting to install the Remote Development extension pack.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iettgjZyA2E&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h15m00s" target="_blank" rel="nofollow noopener noreferrer">00:15:00</A>:</STRONG> Looking briefly at my Docker setup, in particular the images I have for CAP development and testing.<BR />
<PRE><CODE>=&gt; docker image ls<BR />
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE<BR />
cap                 latest              35042912625f        5 days ago          365MB<BR />
debiancap           latest              a8fd0c3eb330        5 days ago          293MB<BR />
node                10                  64c810caf95a        5 weeks ago         899MB<BR />
node                lts                 64c810caf95a        5 weeks ago         899MB<BR />
debian              latest              a0bd3e1c8f9e        3 months ago        101MB</CODE></PRE><BR />
Here's what I have in my <CODE>Dockerfile</CODE> for building the "debiancap" image:<BR />
<PRE><CODE>FROM debian<BR />
MAINTAINER DJ Adams dj.adams@sap.com<BR />
<BR />
RUN apt-get update &amp;&amp; apt-get install -y \<BR />
    ranger \<BR />
    unzip \<BR />
    curl \<BR />
    git \<BR />
    vim</CODE></PRE><BR />
This means I can start a level slightly higher than the base Debian install, with tools that I use all the time.<BR />
<BR />
On top of that I have another <CODE>Dockerfile</CODE> to create the "cap" image:<BR />
<PRE><CODE>FROM debiancap<BR />
MAINTAINER DJ Adams dj.adams@sap.com<BR />
<BR />
RUN rm /bin/sh &amp;&amp; ln -s /bin/bash /bin/sh<BR />
<BR />
RUN groupadd -g 999 user &amp;&amp; \<BR />
    useradd -m -r -u 999 -g user user<BR />
USER user<BR />
<BR />
WORKDIR /home/user<BR />
<BR />
COPY installcds .<BR />
COPY bashrc_additions .<BR />
RUN cat bashrc_additions &gt;&gt; .bashrc<BR />
<BR />
RUN mkdir /home/user/.nvm<BR />
ENV NVM_DIR /home/user/.nvm<BR />
RUN curl -o- <A href="https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh" target="test_blank" rel="nofollow noopener noreferrer">https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh</A> | bash \<BR />
    &amp;&amp; source $NVM_DIR/nvm.sh \<BR />
    &amp;&amp; nvm install --lts</CODE></PRE><BR />
<STRONG><A href="https://www.youtube.com/watch?v=iettgjZyA2E&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h17m45s" target="_blank" rel="nofollow noopener noreferrer">00:17:45</A>:</STRONG> I can then instantiate an instance of the "cap" image - a container - with:<BR />
<DIV><BR />
<PRE class="sourceCode sh"><CODE class="sourceCode bash"><SPAN class="ex">docker</SPAN> run -it cap</CODE></PRE><BR />
</DIV><BR />
<STRONG><A href="https://www.youtube.com/watch?v=iettgjZyA2E&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h19m54s" target="_blank" rel="nofollow noopener noreferrer">00:19:54</A>:</STRONG> Having fired up the newly installed "insiders" version of VS Code I attempt to install the Remote Development extension, but this doesn't work. It seems that the link behind the big green "Install" button is a custom one, that looks like this:<BR />
<PRE><CODE>vscode:extension/ms-vscode-remote.vscode-remote-extensionpack</CODE></PRE><BR />
It looks like standard VS Code, and not the "insiders" version, is set up on my machine to handle this sort of link.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iettgjZyA2E&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h21m11s" target="_blank" rel="nofollow noopener noreferrer">00:21:11</A>:</STRONG> So we take an alternative route and download the extension. We know this route as we've used it before when installing the <A href="https://tools.hana.ondemand.com/#cloud" target="_blank" rel="nofollow noopener noreferrer">CDS Language Support for Visual Studio Code</A>.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iettgjZyA2E&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h22m24s" target="_blank" rel="nofollow noopener noreferrer">00:22:24</A>:</STRONG> As I ramble on about bit rates, Gregor suggests we follow the "Trouble Installing" link but that doesn't give us any immediate clues that seem relevant. Not to worry though as the install-from-downloaded-VSIX file is something that I think will work.<BR />
<BR />
As we look at this documentation we spot how extensions can be installed from the command line; moreover, we've seen this before when Ronnie tooks us through his dotfiles - I remember glimpsing it when I was browsing through the <CODE>macOS.sh</CODE> file, specifically <A href="https://github.com/rsletta/dotfiles/blob/master/macOS.sh#L91-L102" target="_blank" rel="nofollow noopener noreferrer">lines 91-102</A>. Nice!<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iettgjZyA2E&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h24m05s" target="_blank" rel="nofollow noopener noreferrer">00:24:05</A>:</STRONG> Looking briefly at some short (some one-liner!) scripts I've created in a new <CODE>.scripts/</CODE> directory, including <CODE>drmexited</CODE>, <CODE>rdminone</CODE>, <CODE>dsession</CODE> and <CODE>genannopost</CODE>.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iettgjZyA2E&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h26m35s" target="_blank" rel="nofollow noopener noreferrer">00:26:35</A>:</STRONG> Installing the extension with:<BR />
<DIV><BR />
<PRE class="sourceCode sh"><CODE class="sourceCode bash"><SPAN class="ex">code-insiders</SPAN> --install-extension ~/Desktop/ms-vscode-remote.vscode-remote-extensionpack-0.12.0.vsix</CODE></PRE><BR />
</DIV><BR />
And it worked! (We also see some of my older extensions in there, perhaps from the previous VS Code install).<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iettgjZyA2E&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h28m10s" target="_blank" rel="nofollow noopener noreferrer">00:28:10</A>:</STRONG> Now the extension pack is installed, we have a new feature in the bottom left corner of VS Code with which we can ... "attach to running container"!<BR />
<BR />
We start up an instance of the "cap" image (a container) but have an initial issue as that image sets up a non-root user (see the <CODE>USER</CODE> command in the <CODE>Dockerfile</CODE> earlier). So we fire up an instance of the standard "debian" image to try instead ... successfully. We create a directory (<CODE>banana</CODE>) inside the container and can see it in VS Code. Result!<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iettgjZyA2E&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h31m18s" target="_blank" rel="nofollow noopener noreferrer">00:31:18</A>:</STRONG> Jumping now to looking at the <A href="https://github.com/sapmentors/sitregcapm" target="_blank" rel="nofollow noopener noreferrer">sitregcapm</A> repository on GitHub, in the "sapmentors" namespace. This is a project initiated by Gregor as a rewrite of the backend for the <A href="https://wiki.scn.sap.com/wiki/display/events/SAP+Inside+Track" target="_blank" rel="noopener noreferrer">SAP Inside Track</A> registration and management app suite. A rewrite from HANA XS Classic to the Application Programming Model - as the description states: "SITreg implemented in the SAP Cloud Application Programming Model".<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iettgjZyA2E&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h33m00s" target="_blank" rel="nofollow noopener noreferrer">00:33:00</A>:</STRONG> We take a quick look at one of the frontends for this suite, to contextualise the app backend, specifically the SAP Event Organiser app.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iettgjZyA2E&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h37m18s" target="_blank" rel="nofollow noopener noreferrer">00:37:18</A>:</STRONG> We clone the repository and start looking at it in VS Code, for an initial exploration of the contents - including the <CODE>.vscode/</CODE> directory and the two "usual suspects" <CODE>.db/</CODE> and <CODE>.srv</CODE>.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iettgjZyA2E&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h39m25s" target="_blank" rel="nofollow noopener noreferrer">00:39:25</A>:</STRONG> We look at the CSV files and notice that a couple have been "commented out" in that the extension has been changed to <CODE>xcsv</CODE>. It looks like these files are to contain the localised values of texts, as they each end in <CODE>_texts</CODE>.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iettgjZyA2E&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h41m27s" target="_blank" rel="nofollow noopener noreferrer">00:41:27</A>:</STRONG> Looking at more details of the repository we see that there are already six contributors so far - <A href="https://github.com/gregorwolf" target="_blank" rel="nofollow noopener noreferrer">Gregor Wolf</A>, <A href="https://github.com/NabheetCloud" target="_blank" rel="nofollow noopener noreferrer">Nabheet Madan</A>, <A href="https://github.com/balbinosoares" target="_blank" rel="nofollow noopener noreferrer">Balbino Soares</A>, <A href="https://github.com/lechnerc77" target="_blank" rel="nofollow noopener noreferrer">Christian Lechner</A>, <A href="https://github.com/thulium3" target="_blank" rel="nofollow noopener noreferrer">Mark Teichmann</A> and <A href="https://github.com/mattiastrr" target="_blank" rel="nofollow noopener noreferrer">mattiastrr</A>.<BR />
<BR />
But I guess the main point of the focus on this repository is that it deserves more love, and contributors. It would be great if you could get involved, clone the repository, start having a poke around, and make your first contribution. There's a #sitregdiscussion channel on the SAP Mentors &amp; Friends Slack workspace - head on over there (you can register <A href="https://community.sap.com/sapmentors-slack-invite.cfapps.eu10.hana.ondemand.com" target="_blank" rel="nofollow noopener noreferrer">here</A> if you need to) and say hi.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iettgjZyA2E&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h43m50s" target="_blank" rel="nofollow noopener noreferrer">00:43:50</A>:</STRONG> Noting the pairs of <CODE>cds</CODE> and <CODE>js</CODE> files in the <CODE>srv/</CODE> directory, where there's an accompanying custom implementation file paired with each service definition. Turns out there's no custom implementation just yet ... but the project is still young.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iettgjZyA2E&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h47m16s" target="_blank" rel="nofollow noopener noreferrer">00:47:16</A>:</STRONG> Looking briefly at the <CODE>.cdsrc.json</CODE> file, which is part of the hierarchy (or precedence order) of configuration. Think of this file as at the bottom of the stack (i.e. the least significant), where you have the following cascading locations (higher in this stack overrides levels beneath):<BR />
<PRE><CODE>Command line parameters<BR />
Environment variables<BR />
`package.json`<BR />
`.cdsrc.json`</CODE></PRE><BR />
<STRONG><A href="https://www.youtube.com/watch?v=iettgjZyA2E&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h50m20s" target="_blank" rel="nofollow noopener noreferrer">00:50:20</A>:</STRONG> Having a quick look at the errors that currently are highlighted in the <CODE>data-model.cds</CODE> file ... this is because we haven't yet installed anything inside this project! This means that we don't have a <CODE>node_modules/</CODE> directory which is where <CODE><a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1387241">@Sisn</a>/cds/common.cds</CODE> lives of course, as we know from a couple of earlier episodes in this series.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iettgjZyA2E&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h51m15s" target="_blank" rel="nofollow noopener noreferrer">00:51:15</A>:</STRONG> So we start to perform the installs, with <CODE>npm install</CODE>. Looking in the <CODE>package.json</CODE> file we see this:<BR />
<PRE><CODE>  "dependencies": {<BR />
    "@sap/cds": "^3.5.2",<BR />
    "express": "^4.16.4"<BR />
  },</CODE></PRE><BR />
and we head off for a short digression into <A href="https://docs.npmjs.com/misc/semver" target="_blank" rel="nofollow noopener noreferrer">semantic versioning with NPM</A>.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iettgjZyA2E&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h55m23s" target="_blank" rel="nofollow noopener noreferrer">00:55:23</A>:</STRONG> One thing we haven't seen so far is the use of enumerations, which are used here in the type definitions:<BR />
<PRE class="cds"><CODE>type URL            : String(256);<BR />
type HashT          : Binary(32);<BR />
type AnswerOption   : Integer enum { yes = 1; no = 2; maybe = 3; };<BR />
type DeviceT        : String(36);<BR />
type TicketUsedT    : String(1) enum{ YES = 'Y'; NO = 'N'; };<BR />
type ActiveT        : String(1) enum{ YES = 'Y'; NO = 'N'; };<BR />
type PrintStatusT   : String(1) enum{ QUEUED = 'Q'; SENT = 'S'; PRINTED = 'P' };</CODE></PRE><BR />
You can find out more about enumerations (Enums) in the <A href="https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/73ff4d2e372c425bbfab9124cb048d52.html?q=enum" target="_blank" rel="noopener noreferrer">Elements and Types</A> of the SAP Help Portal.<BR />
<BR />
Triggered by a question from Gregor, we look briefly again into how the <CODE>cds</CODE> command line bootstraps the CDS core - bringing in a local version if present, and falling back to a globally installed version otherwise. That is why here, while I have version 3.7.1 installed globally, 3.5.2 is installed locally to this project, which means that when I run <CODE>cds version</CODE> inside the <CODE>sitregcapm</CODE> project directory, I get this:<BR />
<PRE><CODE>@sap/cds: 3.5.2<BR />
@sap/cds-compiler: 1.8.1<BR />
@sap/cds-ql: 1.5.1<BR />
@sap/cds-hana: 1.5.1<BR />
@sap/cds-sql: 1.5.1<BR />
@sap/cds-sqlite: 1.5.1<BR />
@sap/cds-reflect: 2.3.0<BR />
@sap/cds-services: 1.5.2<BR />
@sap/odata-server: 1.0.0<BR />
@sap/odata-commons: 1.0.0<BR />
@sap/generator-cds: 2.3.9<BR />
CDS home: /private/tmp/sitregcapm/node_modules/@sap/cds</CODE></PRE><BR />
And that about wraps it up for this episode - the time went very quickly! Until the next time, happy hacking!
