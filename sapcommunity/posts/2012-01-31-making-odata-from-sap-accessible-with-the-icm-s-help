2012-01-31-making-odata-from-sap-accessible-with-the-icm-s-help
Making OData from SAP accessible with the ICM's help
additional-blog-members
2012-01-31
https://community.sap.com/t5/additional-blogs-by-members/making-odata-from-sap-accessible-with-the-icm-s-help/ba-p/12930095
<DIV class="jive-rendered-content"><DIV><P style="color: #000000;font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;text-align: -webkit-auto">I'm totally enamoured by the power and potential of SAP's <A class="jive-link-external-small" href="https://blogs.sap.com/www.sdn.sap.com/irj/sdn/gateway" target="_blank" rel="noopener noreferrer">NetWeaver Gateway</A>, and all it has to offer with its REST-informed data-centric consumption model. One of the tools I've been looking at in exploring the services is the <A class="jive-link-external-small" href="http://metasapiens.com/sesame/data-browser/preview/" target="_blank" rel="nofollow noopener noreferrer">Sesame Data Browser</A>, a Silverlight-based application that runs inside the browser or on the desktop, and lets you explore OData resources.</P><P></P><P style="color: #000000;font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;text-align: -webkit-auto">One of the challenges in getting the Data Browser to consume OData resources exposed by NetWeaver Gateway (get a <A class="jive-link-external-small" href="http://www.sdn.sap.com/irj/sdn/gateway?rid=/webcontent/uuid/90b292cc-a2d7-2e10-709d-9fba966a6937" target="_blank" rel="noopener noreferrer">trial version</A>, available from the <A class="jive-link-external-small" href="http://www.sdn.sap.com/irj/sdn/gateway" target="_blank" rel="noopener noreferrer">Gateway home page on SDN</A>) was serving a couple of XML-based domain access directive files as described in "<A class="jive-link-external-small" href="http://msdn.microsoft.com/en-us/library/cc197955(v=vs.95).aspx" target="_blank" rel="nofollow noopener noreferrer">Making a Service Available Across Domain Boundaries</A>" - namely clientaccesspolicy.xml and crossdomain.xml, both needing to be served from the root of the domain/port based URL of the Gateway system. In other words, the NetWeaver stack needed to serve requests for these two resources:</P><P></P><PRE style="font-family: Consolas, Monaco, 'Courier New', Courier, monospace;font-size: 12px;color: #000000;text-align: -webkit-auto"><A class="jive-link-external-small" href="http://hostnameport" target="_blank" rel="nofollow noopener noreferrer">http://hostname:port/clientaccesspolicy.xml</A></PRE><P></P><P style="color: #000000;font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;text-align: -webkit-auto">and</P><P></P><PRE style="font-family: Consolas, Monaco, 'Courier New', Courier, monospace;font-size: 12px;color: #000000;text-align: -webkit-auto"><A class="jive-link-external-small" href="http://hostnameport" target="_blank" rel="nofollow noopener noreferrer">http://hostname:port/crossdomain.xml</A></PRE><P></P><P style="color: #000000;font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;text-align: -webkit-auto">Without these files, the Data Browser will show you this sort of error:</P><P></P><PRE style="font-family: Consolas, Monaco, 'Courier New', Courier, monospace;font-size: 12px;color: #000000;text-align: -webkit-auto"><P>A SecurityException has been encountered while opening the connection. </P><P>Please try to open the connection with Sesame installed on the desktop. </P><P>If you are the owner of the OData feed, try to add a clientaccesspolicy.xml </P><P>file on the server.--</P></PRE><P></P><P style="color: #000000;font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;text-align: -webkit-auto">So, how to make these two cross domain access files available, and specifically from the root? There have been some thoughts on this already, <A class="jive-link-external-small" href="http://www.plinky.it/blog/2009/03/09/add-crossdomainxml-on-the-root-of-sap-web-application-server/" target="_blank" rel="nofollow noopener noreferrer">using a default service on the ICF's default host definition</A>, or even dynamically loading the XML as a file into the server cache (see the ABAP program in <A class="jive-link-external-small" href="http://forums.sdn.sap.com/thread.jspa?threadID=281050" target="_blank" rel="noopener noreferrer">this thread in the RIA dev forum</A>).</P><P></P><P style="color: #000000;font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;text-align: -webkit-auto">But a conversation on Twitter last night about BSPs, raw ICF and even the ICM reminded me that the ICM is a powerful engine that is often overlooked and underloved. The ICM -- Internet Communication Manager -- is the collection of core HTTP/SMTP/plugin services that sits underneath the ICF, and handle the actual HTTP traffic below the level of the ICF's ABAP layer. In the style of <A class="jive-link-external-small" href="http://httpd.apache.org/docs/trunk/handler.html" target="_blank" rel="nofollow noopener noreferrer">Apache handlers</A>, there are a series of handlers that the ICM has to deal with plenty of HTTP serving situations - Logging, Authentication, Server Cache, Administration, Modification, File Access, Redirect, as well as the "ABAP" handler we know as the ICF layer.</P><P></P><P style="color: #000000;font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;text-align: -webkit-auto">Could the humble ICM help with serving these two XML resources? Of course it could!</P><P></P><P style="color: #000000;font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;text-align: -webkit-auto">The File Access handler is what we recognise from the level 2 trace info in the dev_icm tracefile as HttpFileAccessHandler. You all read the verbose traces from the ICM with your morning coffee, right? Just kidding. Anyway, the File Access handler makes its features available to us in the form of the <A class="jive-link-external-small" href="http://help.sap.com/saphelp_nw70ehp2/helpdata/en/48/3e1b4e252f72d0e10000000a42189c/frameset.htm" target="_blank" rel="noopener noreferrer">icm/HTTP/file_access_&lt;xx&gt;</A> profile parameters. It allows us to point the ICM at a directory on the filesystem and have it serve files directly, if a URL is matched. Note that this File Access handler is invoked, and given a chance to respond, before we even get to the ABAP handler's ICF level.</P><P></P><P style="color: #000000;font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;text-align: -webkit-auto">With a couple of these file_access parameters, we can serve static clientaccesspolicy.xml and crossdomain.xml files straight from the filesystem, matched at root. Here's what I have in my /usr/sap/NPL/SYS/profile/NPL_DVEBMGS42_nplhost parameter file:</P><P></P><PRE style="font-family: Consolas, Monaco, 'Courier New', Courier, monospace;font-size: 12px;color: #000000;text-align: -webkit-auto"><P>icm/HTTP/file_access_1 = PREFIX=/clientaccesspolicy.xml, </P><P>&nbsp;&nbsp; DOCROOT=$(DIR_INSTANCE)/qmacro, DIRINDEX=clientaccesspolicy.xml </P><P>icm/HTTP/file_access_2 = PREFIX=/crossdomain.xml, </P><P>&nbsp;&nbsp; DOCROOT=$(DIR_INSTANCE)/qmacro, DIRINDEX=crossdomain.xml</P></PRE><P></P><P style="color: #000000;font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;text-align: -webkit-auto">(I already have file_access_0 specifying something else not relevant here).</P><P></P><P style="color: #000000;font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;text-align: -webkit-auto">What are these parameters saying? Well the PREFIX specifies the relative URL to match, the DOCROOT specifies the directory that the ICM is to serve files from in response to requests matching the PREFIX, and DIRINDEX is a file to serve when the 'index' is requested. Usually the PREFIX is used to specify a directory, or a relative URL representing a 'container', so the DIRINDEX value is what's served when there's a request for exactly that container. The upshot is that the relevant file is served for the right relative resource. The files are in directory /usr/sap/NPL/DVEBMGS42/qmacro/.</P><P></P><P style="color: #000000;font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;text-align: -webkit-auto">While we're at it, we might as well specify a similar File Access handler parameter to serve the favicon, not least because that will prevent those pesky warnings about not being able to serve requests for that resource, if you don't have one already:</P><P></P><PRE style="font-family: Consolas, Monaco, 'Courier New', Courier, monospace;font-size: 12px;color: #000000;text-align: -webkit-auto"><P>icm/HTTP/file_access_3 = PREFIX=/favicon.ico, </P><P>&nbsp; DOCROOT=$(DIR_INSTANCE)/qmacro, DIRINDEX=favicon.ico</P></PRE><P></P><P style="color: #000000;font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;text-align: -webkit-auto">The upshot of all this is that the static XML resources are served directly by the ICM, without the request even having to permeate up as far as the ABAP stack:</P><P></P><PRE style="font-family: Consolas, Monaco, 'Courier New', Courier, monospace;font-size: 12px;color: #000000;text-align: -webkit-auto"><P>Handler 5: HttpFileAccessHandler matches url: /clientaccesspolicy.xml </P><P>HttpSubHandlerCall: Call Handler: HttpFileAccessHandler (1089830/1088cf0), task=TASK_REQUEST(1), header_len=407 </P><P>HttpFileAccessHandler: access file/dir: /usr/sap/NPL/DVEBMGS42/qmacro </P><P>HttpFileAccessHandler: file /usr/sap/NPL/DVEBMGS42/qmacro/clientaccesspolicy.xml modified: -1/1326386676 </P><P>HttpSubHandlerItDeactivate: handler 4: HttpFileAccessHandler </P><P>HttpSubHandlerClose: Call Handler: HttpFileAccessHandler (1089830/1088cf0), task=TASK_CLOSE(3)</P></PRE><P></P><P style="color: #000000;font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;text-align: -webkit-auto">and also that the browser-based Sesame Data Browser can access your Gateway OData resources successfully:</P><P class="mceTemp"></P><DL class="wp-caption alignnone" style="width: 459px"><DT class="wp-caption-dt"><A href="http://www.pipetree.com/qmacro/blog/wp-content/uploads/2012/02/SesameDataBrowserScreenshot.png" target="_blank" rel="nofollow noopener noreferrer"><IMG class="size-full wp-image-1311 jiveImage" height="336" src="http://www.pipetree.com/qmacro/blog/wp-content/uploads/2012/02/SesameDataBrowserScreenshot.png" style="border: 0px none" title="SesameDataBrowserScreenshot" width="449" /></A></DT><DD class="wp-caption-dd" style="font-size: 11px;padding: 0 4px 5px">Data Browser</DD></DL><P></P><P></P><P style="color: #000000;font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;text-align: -webkit-auto">Success!</P><P></P><P style="color: #000000;font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;text-align: -webkit-auto">If you're interested in learning more about the Internet Communication Manager (ICM) and the Internet Communication Framework (ICF), you might be interested in my <A class="jive-link-external-small" href="http://omniversity.madlab.org.uk" target="_blank" rel="nofollow noopener noreferrer">Omniversity of Manchester</A> course:</P><P></P><H3 style="font-size: 1.17em;color: #000000;font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;text-align: -webkit-auto" id="toc-hId-316234710"><A class="jive-link-external-small" href="https://docs.google.com/document/pub?id=1gaTCzfuisyG0UyZE70RrxiltoC1zcSSaM2iMHqN5mjY" target="_blank" rel="nofollow noopener noreferrer">Web Programming with SAP's Internet Communication Framework</A></H3><P></P><P style="color: #000000;font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;text-align: -webkit-auto">Which is currently running in <A class="jive-link-external-small" href="http://s.madlab.org.uk/sap2" target="_blank" rel="nofollow noopener noreferrer">March (3rd and 4th)</A> and <A class="jive-link-external-small" href="http://s.madlab.org.uk/sap3" target="_blank" rel="nofollow noopener noreferrer">May (9th and 10th)</A> in Manchester.</P><P></P><P></P><P></P><P></P></DIV></DIV>
