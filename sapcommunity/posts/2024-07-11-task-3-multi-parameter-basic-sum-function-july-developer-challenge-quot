2024-07-11-task-3-multi-parameter-basic-sum-function-july-developer-challenge-quot
Task 3 - Multi-parameter basic sum function (July Developer Challenge - "Reverse APIs")
application-developmentforum-board
2024-07-11
https://community.sap.com/t5/application-development-discussions/task-3-multi-parameter-basic-sum-function-july-developer-challenge-quot/td-p/13757582
<P>This is a task in the<SPAN>&nbsp;</SPAN><A href="https://community.sap.com/t5/application-development-blog-posts/2024-07-quot-reverse-apis-quot-sap-developer-challenge/ba-p/13749653" target="_blank">July Developer Challenge - "Reverse APIs"</A>.</P><P>This task is to add a final API endpoint to the service you already created in<SPAN>&nbsp;</SPAN><A href="https://community.sap.com/t5/application-development-discussions/2024-07-developer-challenge-task-1-your-first-service-and-first-endpoint/m-p/13752205" target="_blank">Task 1 - Your first service and first endpoint</A>. It expands a little on the previous task to cement the idea of parameter definitions and access to them in the implementation.</P><H2 id="toc-hId-1019457720">The requirements</H2><P>Here are the specific requirements for this task.</P><P>The API endpoint should be made available within the existing service<SPAN>&nbsp;</SPAN>basic. Relative to the service path, the name should be<SPAN>&nbsp;</SPAN>sum<SPAN>&nbsp;</SPAN>and be requestable via an HTTP GET method.</P><P>It should be defined with two Integer parameters,<SPAN>&nbsp;</SPAN>a<SPAN>&nbsp;</SPAN>and<SPAN>&nbsp;</SPAN>b, and should return an Integer value, being the sum of<SPAN>&nbsp;</SPAN>a<SPAN>&nbsp;</SPAN>and<SPAN>&nbsp;</SPAN>b, in the context of a JSON payload that looks like this (pretty-printed for readability here):</P><DIV class=""><PRE>{
  <SPAN class="">"@odata.context"</SPAN>: <SPAN class=""><SPAN class="">"</SPAN>$metadata#Edm.Int32<SPAN class="">"</SPAN></SPAN>,
  <SPAN class="">"value"</SPAN>: <SPAN class="">&lt;sum-of-a-and-b&gt;</SPAN>
}</PRE><DIV class=""><SPAN>All this means is that you should declare and implement this API endpoint as another</SPAN><SPAN>&nbsp;</SPAN><A href="https://cap.cloud.sap/docs/cds/cdl#actions" target="_blank" rel="nofollow noopener noreferrer">unbound function</A></DIV></DIV><P>When this API endpoint is added to the service and served via the OData V4 protocol, the service metadata document should look like this:</P><DIV class=""><PRE>&lt;?<SPAN class="">xml</SPAN><SPAN class=""> version</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>1.0<SPAN class="">"</SPAN></SPAN><SPAN class=""> encoding</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>utf-8<SPAN class="">"</SPAN></SPAN>?&gt;
&lt;<SPAN class="">edmx</SPAN><SPAN class="">:</SPAN><SPAN class="">Edmx</SPAN> <SPAN class="">Version</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>4.0<SPAN class="">"</SPAN></SPAN> <SPAN class="">xmlns</SPAN><SPAN class="">:</SPAN><SPAN class="">edmx</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>http://docs.oasis-open.org/odata/ns/edmx<SPAN class="">"</SPAN></SPAN>&gt;
  &lt;<SPAN class="">edmx</SPAN><SPAN class="">:</SPAN><SPAN class="">Reference</SPAN> <SPAN class="">Uri</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>https://sap.github.io/odata-vocabularies/vocabularies/Common.xml<SPAN class="">"</SPAN></SPAN>&gt;
    &lt;<SPAN class="">edmx</SPAN><SPAN class="">:</SPAN><SPAN class="">Include</SPAN> <SPAN class="">Alias</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>Common<SPAN class="">"</SPAN></SPAN> <SPAN class="">Namespace</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>com.sap.vocabularies.Common.v1<SPAN class="">"</SPAN></SPAN>/&gt;
  &lt;/<SPAN class="">edmx</SPAN><SPAN class="">:</SPAN><SPAN class="">Reference</SPAN>&gt;
  &lt;<SPAN class="">edmx</SPAN><SPAN class="">:</SPAN><SPAN class="">Reference</SPAN> <SPAN class="">Uri</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>https://oasis-tcs.github.io/odata-vocabularies/vocabularies/Org.OData.Core.V1.xml<SPAN class="">"</SPAN></SPAN>&gt;
    &lt;<SPAN class="">edmx</SPAN><SPAN class="">:</SPAN><SPAN class="">Include</SPAN> <SPAN class="">Alias</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>Core<SPAN class="">"</SPAN></SPAN> <SPAN class="">Namespace</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>Org.OData.Core.V1<SPAN class="">"</SPAN></SPAN>/&gt;
  &lt;/<SPAN class="">edmx</SPAN><SPAN class="">:</SPAN><SPAN class="">Reference</SPAN>&gt;
  &lt;<SPAN class="">edmx</SPAN><SPAN class="">:</SPAN><SPAN class="">DataServices</SPAN>&gt;
    &lt;<SPAN class="">Schema</SPAN> <SPAN class="">Namespace</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>basic<SPAN class="">"</SPAN></SPAN> <SPAN class="">xmlns</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>http://docs.oasis-open.org/odata/ns/edm<SPAN class="">"</SPAN></SPAN>&gt;
      &lt;<SPAN class="">EntityContainer</SPAN> <SPAN class="">Name</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>EntityContainer<SPAN class="">"</SPAN></SPAN>&gt;
        &lt;<SPAN class="">FunctionImport</SPAN> <SPAN class="">Name</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>ping<SPAN class="">"</SPAN></SPAN> <SPAN class="">Function</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>basic.ping<SPAN class="">"</SPAN></SPAN>/&gt;
        &lt;<SPAN class="">FunctionImport</SPAN> <SPAN class="">Name</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>hello<SPAN class="">"</SPAN></SPAN> <SPAN class="">Function</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>basic.hello<SPAN class="">"</SPAN></SPAN>/&gt;
        &lt;<SPAN class="">FunctionImport</SPAN> <SPAN class="">Name</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>sum<SPAN class="">"</SPAN></SPAN> <SPAN class="">Function</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>basic.sum<SPAN class="">"</SPAN></SPAN>/&gt;
      &lt;/<SPAN class="">EntityContainer</SPAN>&gt;
      &lt;<SPAN class="">Function</SPAN> <SPAN class="">Name</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>ping<SPAN class="">"</SPAN></SPAN> <SPAN class="">IsBound</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>false<SPAN class="">"</SPAN></SPAN> <SPAN class="">IsComposable</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>false<SPAN class="">"</SPAN></SPAN>&gt;
        &lt;<SPAN class="">ReturnType</SPAN> <SPAN class="">Type</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>Edm.String<SPAN class="">"</SPAN></SPAN>/&gt;
      &lt;/<SPAN class="">Function</SPAN>&gt;
      &lt;<SPAN class="">Function</SPAN> <SPAN class="">Name</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>hello<SPAN class="">"</SPAN></SPAN> <SPAN class="">IsBound</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>false<SPAN class="">"</SPAN></SPAN> <SPAN class="">IsComposable</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>false<SPAN class="">"</SPAN></SPAN>&gt;
        &lt;<SPAN class="">Parameter</SPAN> <SPAN class="">Name</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>to<SPAN class="">"</SPAN></SPAN> <SPAN class="">Type</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>Edm.String<SPAN class="">"</SPAN></SPAN>/&gt;
        &lt;<SPAN class="">ReturnType</SPAN> <SPAN class="">Type</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>Edm.String<SPAN class="">"</SPAN></SPAN>/&gt;
      &lt;/<SPAN class="">Function</SPAN>&gt;
      &lt;<SPAN class="">Function</SPAN> <SPAN class="">Name</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>sum<SPAN class="">"</SPAN></SPAN> <SPAN class="">IsBound</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>false<SPAN class="">"</SPAN></SPAN> <SPAN class="">IsComposable</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>false<SPAN class="">"</SPAN></SPAN>&gt;
        &lt;<SPAN class="">Parameter</SPAN> <SPAN class="">Name</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>a<SPAN class="">"</SPAN></SPAN> <SPAN class="">Type</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>Edm.Int32<SPAN class="">"</SPAN></SPAN>/&gt;
        &lt;<SPAN class="">Parameter</SPAN> <SPAN class="">Name</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>b<SPAN class="">"</SPAN></SPAN> <SPAN class="">Type</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>Edm.Int32<SPAN class="">"</SPAN></SPAN>/&gt;
        &lt;<SPAN class="">ReturnType</SPAN> <SPAN class="">Type</SPAN>=<SPAN class=""><SPAN class="">"</SPAN>Edm.Int32<SPAN class="">"</SPAN></SPAN>/&gt;
      &lt;/<SPAN class="">Function</SPAN>&gt;
    &lt;/<SPAN class="">Schema</SPAN>&gt;
  &lt;/<SPAN class="">edmx</SPAN><SPAN class="">:</SPAN><SPAN class="">DataServices</SPAN>&gt;
&lt;/<SPAN class="">edmx</SPAN><SPAN class="">:</SPAN><SPAN class="">Edmx</SPAN>&gt;</PRE><DIV class=""><SPAN>You can see that this metadata document contains definitions for this new</SPAN><SPAN>&nbsp;</SPAN><SPAN>FunctionImport</SPAN><SPAN>&nbsp;</SPAN><SPAN>"sum", as well as the two previous</SPAN><SPAN>&nbsp;</SPAN><SPAN>FunctionImports "ping" and "hello".</SPAN></DIV></DIV><P>Once you've got your service defined, and a simple implementation ready with an<SPAN>&nbsp;</SPAN>on<SPAN>&nbsp;</SPAN>handler for the<SPAN>&nbsp;</SPAN>sum<SPAN>&nbsp;</SPAN>event, you're ready.</P><P>It is definitely worth testing it yourself first, e.g. with<SPAN>&nbsp;</SPAN>curl, Postman, or even the<SPAN>&nbsp;</SPAN><A href="https://marketplace.visualstudio.com/items?itemName=humao.rest-client" target="_blank" rel="nofollow noopener noreferrer">REST Client</A><SPAN>&nbsp;</SPAN>extension to VS Code that some of you are using (going on what I can see from some of your responses to the<SPAN>&nbsp;</SPAN><A href="https://community.sap.com/t5/application-development-discussions/july-developer-challenge-quot-reverse-apis-quot-task-1-your-first-service/m-p/13752205" target="_blank">previous task</A>). Use whatever tool you prefer for making HTTP calls.</P><P>With your server running (on, let's say, the default local CAP server port of 4004), make a request like this, supplying values for the<SPAN>&nbsp;</SPAN>a<SPAN>&nbsp;</SPAN>and<SPAN>&nbsp;</SPAN>b<SPAN>&nbsp;</SPAN>parameters:</P><DIV class=""><PRE>curl -s --url <SPAN class=""><SPAN class="">"</SPAN>localhost:4004/basic/sum(a=100,b=50)<SPAN class="">"</SPAN></SPAN></PRE><DIV class=""><SPAN>and the reponse should look like this:</SPAN></DIV></DIV><DIV class=""><PRE>{<SPAN class="">"@odata.context"</SPAN>:<SPAN class=""><SPAN class="">"</SPAN>$metadata#Edm.Int32<SPAN class="">"</SPAN></SPAN>,<SPAN class="">"value"</SPAN>:<SPAN class="">150</SPAN>}</PRE></DIV><H2 id="toc-hId-822944215">Submitting your API endpoint to the TESTER</H2><P>Now you're ready to submit your CANDIDATE service, with the specific API endpoint, to the TESTER!</P><H3 id="toc-hId-755513429">The payload</H3><P>The task identifier you need to supply in the payload of your submission is:<SPAN>&nbsp;</SPAN><STRONG>basic-sum</STRONG>.</P><P>You'll have already done this sort of thing<SPAN>&nbsp;</SPAN><A href="https://community.sap.com/t5/application-development-discussions/july-developer-challenge-quot-reverse-apis-quot-task-1-your-first-service/m-p/13752205" target="_blank">previously</A><SPAN>&nbsp;</SPAN>so just head back there for the more detailed instructions if you need them, or to the the section titled "<A href="https://community.sap.com/t5/application-development-blog-posts/2024-07-quot-reverse-apis-quot-sap-developer-challenge/ba-p/13749653#toc-hId--553513390" target="_blank">The Tester service, and making a test request</A>" in the<SPAN>&nbsp;</SPAN><A href="https://community.sap.com/t5/application-development-blog-posts/2024-07-quot-reverse-apis-quot-sap-developer-challenge/ba-p/13749653" target="_blank">main challenge blog post</A>.</P><P>Now, to have your freshly minted API endpoint in this task tested, you'll need to submit a JSON payload like this:</P><DIV class=""><PRE>{
  <SPAN class="">"communityid"</SPAN>: <SPAN class=""><SPAN class="">"</SPAN>&lt;your-community-id&gt;<SPAN class="">"</SPAN></SPAN>,
  <SPAN class="">"serviceurl"</SPAN>: <SPAN class=""><SPAN class="">"</SPAN>&lt;the-URL-of-your-service&gt;<SPAN class="">"</SPAN></SPAN>,
  <SPAN class="">"task"</SPAN>: <SPAN class=""><SPAN class="">"</SPAN>basic-sum<SPAN class="">"</SPAN></SPAN>
}</PRE><DIV class=""><SPAN>And, just as with the previous (and all further tasks):</SPAN></DIV></DIV><UL><LI><P>the value for the<SPAN>&nbsp;</SPAN>communityid<SPAN>&nbsp;</SPAN>property should be your ID on this SAP Community platform (e.g. mine is "qmacro")</P></LI><LI><P>the value for the<SPAN>&nbsp;</SPAN>serviceurl<SPAN>&nbsp;</SPAN>property should be the absolute URL (i.e. including the scheme), of your CANDIDATE<SPAN>&nbsp;</SPAN><STRONG>service</STRONG><SPAN>&nbsp;</SPAN>which<SPAN>&nbsp;</SPAN><EM>contains</EM><SPAN>&nbsp;</SPAN>the API endpoint (see<SPAN>&nbsp;</SPAN><A href="https://community.sap.com/t5/application-development-blog-posts/2024-07-quot-reverse-apis-quot-sap-developer-challenge/ba-p/13749653#toc-hId--356999885" target="_blank"><span class="lia-unicode-emoji" title=":information:">ℹ️</span><SPAN>&nbsp;</SPAN>A note on URLs and services</A>), not the full URL of the specific API endpoint itself</P></LI></UL><P>That's it!</P><H2 id="toc-hId-429917205">Logging of test results</H2><P>Remember that you can check on your progress, and the progress of your fellow participants - all requests are logged and are available in an entity set served by the TESTER service. The entity set URL is<SPAN>&nbsp;</SPAN><A href="https://developer-challenge-2024-07.cfapps.eu10.hana.ondemand.com/tester/Testlog" target="_blank" rel="nofollow noopener noreferrer">https://developer-challenge-2024-07.cfapps.eu10.hana.ondemand.com/tester/Testlog</A><SPAN>&nbsp;</SPAN>and being an OData V4 entity set, all the normal OData system query options are available to you for digging into that information.</P><P>Until the next task, have fun, and if you have any questions or comments, leave them below!</P>
