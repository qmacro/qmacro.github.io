2019-03-07-annotated-links-episode-3-of-hands-on-sap-dev-with-qmacro
Annotated links: Episode 3 of Hands-on SAP dev with qmacro
technology-blog-sap
2019-03-07
https://community.sap.com/t5/technology-blogs-by-sap/annotated-links-episode-3-of-hands-on-sap-dev-with-qmacro/ba-p/13411938
<EM>This is a searchable description of the content of a live stream recording, specifically <STRONG>"Episode 3 - Special guest edition: Interview with core CAPM developers from the mothership!"</STRONG> in the "<A href="https://bit.ly/handsonsapdev" target="_blank" rel="nofollow noopener noreferrer">Hands-on SAP dev with qmacro</A>" series. There are links directly to specific highlights in the video recording. For links to annotations of other episodes, please see the "<A href="https://bit.ly/handsonsapdev#replays" target="_blank" rel="nofollow noopener noreferrer">Catch the replays</A>" section of the series blog post.</EM><BR />
<BR />
This episode, titled "<A href="https://bit.ly/handsonsapdev#ep3" target="_blank" rel="nofollow noopener noreferrer">Special guest edition: Interview with core CAPM developers from the mothership!</A>", was streamed live on Fri 08 Feb 2019 and is approximately one hour in length. The stream recording is <A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0" target="_blank" rel="nofollow noopener noreferrer">available on YouTube</A>.<BR />
<BR />
<IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/03/Screen-Shot-2019-03-07-at-18.56.07.png" /><BR />
<BR />
Below is a brief synopsis, and links to specific highlights - use these links to jump directly to particular places of interest in the recording, based on 'hh:mm:ss' style timestamps.<BR />
<H2 id="brief-synopsis" id="toc-hId-929701132">Brief synopsis</H2><BR />
This episode is rather special, in that I interview Christian Georgi from the core CAPM development team at the mothership in Walldorf. We talk CAPM, have some Q&amp;A Christian shows us some cool live demos.<BR />
<H2 id="links-to-specific-highlights" id="toc-hId-733187627">Links to specific highlights</H2><BR />
<STRONG><A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h03m10s" target="_blank" rel="nofollow noopener noreferrer">00:03:10</A>:</STRONG> Welcoming Christian Georgi to the live stream.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h03m50s" target="_blank" rel="nofollow noopener noreferrer">00:03:50</A>:</STRONG> Noticing that we are both extra geeky as we're wearing not only the same tshirt (the SAP Cloud Application Programming Model one) but also the same white long sleeve shirt underneath. As <A href="https://twitter.com/fredverheul" target="_blank" rel="nofollow noopener noreferrer">Fred Verheul</A> remarked: "Fashionistas"!<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h05m38s" target="_blank" rel="nofollow noopener noreferrer">00:05:38</A>:</STRONG> Learning from Christian how CAPM (or "CAP") came about.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h10m15s" target="_blank" rel="nofollow noopener noreferrer">00:10:15</A>:</STRONG> Hearing from Christian about how CAPM fits into the SAP developers overall toolkit today.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h13m20s" target="_blank" rel="nofollow noopener noreferrer">00:13:20</A>:</STRONG> Talking about how guidance and opinionated software &amp; best practices can be useful in a world full of choices.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h14m40s" target="_blank" rel="nofollow noopener noreferrer">00:14:40</A>:</STRONG> Finding out where CAPM is used by internal teams within SAP, as this is often where toolkits and other offerings start out and find their feet. One example is the app formerly known as "Excise Duty", a special tax app for breweries in Germany. Wonderful!<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h16m58s" target="_blank" rel="nofollow noopener noreferrer">00:16:58</A>:</STRONG> Talking about support for Java and Node.js in SAP Web IDE and locally, from a question asked by Pierre Dominique. (Node.js support is coming back to SAP Web IDE, for CDS 3.x ... and it's already possible to build and run Java locally).<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h18m00s" target="_blank" rel="nofollow noopener noreferrer">00:18:00</A>:</STRONG> Breaking news! Announcement on the stream that a new version of the <CODE><a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1387241">@Sisn</a>/cds</CODE> is being released today, and Christian will be pressing the big red button.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h19m20s" target="_blank" rel="nofollow noopener noreferrer">00:19:20</A>:</STRONG> Talking about the REPL (Read-Evaluate-Print-Loop) feature in the <CODE>cds</CODE> command line utility, born from one of Daniel Hutzel's "night programming sessions" :-). With the REPL you can programmatically interact with the runtime. See <A href="https://blogs.sap.com/2019/02/04/cloudfoundryfun-upgrade-cloud-foundry-with-a-new-repl-feature" target="_blank" rel="noopener noreferrer">CloudFoundryFun #1 â€“ Upgrade Cloud Foundry With A New REPL Feature</A> by <SPAN class="mention-scrubbed">mariusobert</SPAN> for more on REPLs.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h21m12s" target="_blank" rel="nofollow noopener noreferrer">00:21:12</A>:</STRONG> Christian refers to CSN, pronounced "season", which is the canonical model structure used internally in CAP (and we've seen this in other episodes, in fact, including the <A href="https://blogs.sap.com//bit.ly/handsonsapdev#ep2" target="_blank" rel="noopener noreferrer">previous episode</A> as the default output from the execution of a <CODE>cds compile</CODE> command.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h22m56s" target="_blank" rel="nofollow noopener noreferrer">00:22:56</A>:</STRONG> Time for the live demonstrations by Christian.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h24m08s" target="_blank" rel="nofollow noopener noreferrer">00:24:08</A>:</STRONG> A message from OBS, my streaming software: "Streaming encoding overload"!<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h24m44s" target="_blank" rel="nofollow noopener noreferrer">00:24:44</A>:</STRONG> Starting to look at a slightly updated version of the "bookshop" demo app, which is going to be used consistently throughout the CAP rollout materials, especially for Node.js.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h25m10s" target="_blank" rel="nofollow noopener noreferrer">00:25:10</A>:</STRONG> The updated VS Code has new features, which Christian briefly explores, before enabling the "screencast mode" feature. And he's bringing the feature to Eclipse, too. Awesome!<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h27m00s" target="_blank" rel="nofollow noopener noreferrer">00:27:00</A>:</STRONG> Taking a look at the <CODE>data-model.cds</CODE>, talking about how easy it is to navigate through the code, across the files, in VS Code too. Remembering that CAP uses the NPM module system to load up and find CDS files.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h28m35s" target="_blank" rel="nofollow noopener noreferrer">00:28:35</A>:</STRONG> Mention of dependencies that can be defined, in <CODE>package.json</CODE>, on another CDS model, using the <CODE>git</CODE> URL scheme.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h29m30s" target="_blank" rel="nofollow noopener noreferrer">00:29:30</A>:</STRONG> Noting that you don't need to include the <CODE>.cds</CODE> extension explicitly when referring to other files. This gives the module provider the chance to provide not only CDS sources but compiled CSN. Nice! Also, putting files manually directly into the <CODE>node_modules</CODE> directory works too - you don't need to use NPM to install.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h31m52s" target="_blank" rel="nofollow noopener noreferrer">00:31:52</A>:</STRONG> Showing code completion for file and directory paths when specifying a <CODE>using</CODE> statement, powered also by the Language Server Protocol (LSP).<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h34m10s" target="_blank" rel="nofollow noopener noreferrer">00:34:10</A>:</STRONG> Relaying Fred Verheul's question on extending S/4HANA, on reusing existing data models from the ABAP backends, just applying the necessary extensions. The answer involves translating the OData API back into CSN!<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h36m45s" target="_blank" rel="nofollow noopener noreferrer">00:36:45</A>:</STRONG> Looking at the elements in the <CODE>managed</CODE> type (in <CODE>common.cds</CODE>) that provide administrative data, avoiding re-invention each time. A lovely simple solution, with some complexity &amp; heavy lifting hidden, no doubt!<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h38m45s" target="_blank" rel="nofollow noopener noreferrer">00:38:45</A>:</STRONG> Looking at the <CODE>localized</CODE> keyword, which is a feature that is nearing completion at the time of recording. We got a sneak preview on Christian's machine, too, in the context of the Fiori frontend part to the bookshop sample, which is also new. BrontÃ«'s "Wuthering Heights" in German is "SturmhÃ¶he". Who knew?! The localisation feature requires some heavy lifting on the database, as you can well imagine.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h43m38s" target="_blank" rel="nofollow noopener noreferrer">00:43:38</A>:</STRONG> You don't need to specify the <CODE>compile</CODE> option as it's default for the <CODE>cds</CODE> command, so when Christian uses <CODE>cds srv/ -2 sql</CODE> it works fine. Here in the output we see a window into how things are generated underneath for the localisation. Note that it's different between SQL and HANA because of the features that can be used in HANA itself.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h45m00s" target="_blank" rel="nofollow noopener noreferrer">00:45:00</A>:</STRONG> Looking at some early works on temporal aspects of data, with the abstract entity <CODE>temporal</CODE>, which we recognise from HR data sets.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h47m25s" target="_blank" rel="nofollow noopener noreferrer">00:47:25</A>:</STRONG> Discussing <A href="https://twitter.com/vobu" target="_blank" rel="nofollow noopener noreferrer">Volker Buzek</A>'s question on exposing CDS as openAPI, and then Pierre Dominique's question on exposing a GraphQL endpoint (for more on GraphQL see <A href="https://blogs.sap.com/2018/09/03/monday-morning-thoughts-considering-graphql/" target="_blank" rel="noopener noreferrer">Monday morning thoughts: considering GraphQL</A>). GraphQL is on the roadmap but with no fixed date yet.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h53m00s" target="_blank" rel="nofollow noopener noreferrer">00:53:00</A>:</STRONG> Looking at the <CODE>admin-service.cds</CODE> which has service notation exposing entities to the outside world, and the use of the <CODE>excluding</CODE> keyword to exclude fields from entities (which is often better than implicitly <EM>including</EM> fields because of the problems that causes with extensibility).<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h55m06s" target="_blank" rel="nofollow noopener noreferrer">00:55:06</A>:</STRONG> Mentioning a small gotcha I encountered when trying to use <CODE>excluding</CODE> - I'd forgotten to re-deploy to the persistence layer - the keyword implies modifications at the view level in the database (note that the services are reflected using views in the database, leveraging native database capabilities rather than writing code above the persistence layer).<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h57m15s" target="_blank" rel="nofollow noopener noreferrer">00:57:15</A>:</STRONG> Talking about the <A href="https://marketplace.visualstudio.com/items?itemName=alexcvzz.vscode-sqlite" target="_blank" rel="nofollow noopener noreferrer">SQLite Explorer extension</A> for VS Code, very useful.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=iFLlTpwOujw&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h57m41s" target="_blank" rel="nofollow noopener noreferrer">00:57:41</A>:</STRONG> Wrapping up with Christian, what a great guest. Thank you <SPAN class="mention-scrubbed">christian.georgi</SPAN>!
