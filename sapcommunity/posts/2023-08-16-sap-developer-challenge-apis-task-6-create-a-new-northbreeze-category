2023-08-16-sap-developer-challenge-apis-task-6-create-a-new-northbreeze-category
SAP Developer Challenge - APIs - Task 6 - Create a new Northbreeze category
application-developmentforum-board
2023-08-16
https://community.sap.com/t5/application-development-discussions/sap-developer-challenge-apis-task-6-create-a-new-northbreeze-category/td-p/279812
<P>(Check out the <A href="https://blogs.sap.com/2023/08/01/sap-developer-challenge-apis/" target="_blank" rel="noopener noreferrer">SAP Developer Challenge - APIs</A> blog post for everything you need to know about the challenge to which this task relates!)</P><P>You've made various read-only requests so far; now it's time to create some data.</P><H2 id="toc-hId-1651321637">Background</H2><P>For this task we return briefly to the <A href="https://developer-challenge.cfapps.eu10.hana.ondemand.com/odata/v4/northbreeze" target="_self" rel="nofollow noopener noreferrer">Northbreeze service</A> from <A href="https://groups.community.sap.com/t5/application-development/sap-developer-challenge-apis-task-2-calculate-northbreeze/td-p/277325" target="_self" rel="noopener noreferrer">Task 2</A>. Until now, mostly due to the nature of the deliberate simplicity of the tasks in this Developer Challenge, the actions you've been performing from an HTTP perspective have been read-only.</P><P>This time you'll write some data, albeit data that won't last long (the Northbreeze service runs in-memory and has been set up not to use a permanent persistence layer). Then you'll read it back, with a minor difference, to examine what the response looks like. It's that response, compressed, that you'll need for the hash.</P><P>The Northwind service traditionally has products, which you've encountered already. Those products are organized into <A href="https://developer-challenge.cfapps.eu10.hana.ondemand.com/odata/v4/northbreeze/Categories" target="_blank" rel="noopener nofollow noreferrer">categories</A>, of which there are just a few. A category (taking <A href="https://developer-challenge.cfapps.eu10.hana.ondemand.com/odata/v4/northbreeze/Categories/1" target="_self" rel="nofollow noopener noreferrer">the first one</A>) looks like this:</P><DIV class=""><PRE><SPAN><SPAN class="">{</SPAN></SPAN>
<SPAN>  <SPAN class="">"CategoryID"</SPAN><SPAN class="">:</SPAN> <SPAN class="">1</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>  <SPAN class="">"CategoryName"</SPAN><SPAN class="">:</SPAN> <SPAN class="">"Beverages"</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>  <SPAN class="">"Description"</SPAN><SPAN class="">:</SPAN> <SPAN class="">"Soft drinks, coffees, teas, beers, and ales"</SPAN></SPAN>
<SPAN><SPAN class="">}</SPAN></SPAN></PRE></DIV><P>You can get a feel for the distribution of products across categories by asking for <A href="https://developer-challenge.cfapps.eu10.hana.ondemand.com/odata/v4/northbreeze/Products?$apply=groupby((Category_CategoryID),aggregate($count%20as%20productcount))" target="_blank" rel="noopener nofollow noreferrer">the count of products by category ID</A> which is expressed like this (showing the path, with whitespace, for easier reading):</P><PRE>/odata/v4/northbreeze/Products
  ?$apply=groupby(
    (Category_CategoryID),
    aggregate($count as productcount)
  )</PRE><P>This returns a response that looks like this:</P><DIV class=""><PRE><SPAN><SPAN class="">{</SPAN></SPAN>
<SPAN>  <SPAN class="">"@odata.context"</SPAN><SPAN class="">:</SPAN> <SPAN class="">"$metadata#Products(Category_CategoryID,productcount)"</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>  <SPAN class="">"value"</SPAN><SPAN class="">:</SPAN> <SPAN class="">[</SPAN></SPAN>
<SPAN>    <SPAN class="">{</SPAN></SPAN>
<SPAN>      <SPAN class="">"productcount@odata.type"</SPAN><SPAN class="">:</SPAN> <SPAN class="">"#Decimal"</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>      <SPAN class="">"productcount"</SPAN><SPAN class="">:</SPAN> <SPAN class="">12</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>      <SPAN class="">"Category_CategoryID"</SPAN><SPAN class="">:</SPAN> <SPAN class="">1</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>      <SPAN class="">"@odata.id"</SPAN><SPAN class="">:</SPAN> <SPAN class="">null</SPAN></SPAN>
<SPAN>    <SPAN class="">}</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>    <SPAN class="">{</SPAN></SPAN>
<SPAN>      <SPAN class="">"productcount@odata.type"</SPAN><SPAN class="">:</SPAN> <SPAN class="">"#Decimal"</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>      <SPAN class="">"productcount"</SPAN><SPAN class="">:</SPAN> <SPAN class="">12</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>      <SPAN class="">"Category_CategoryID"</SPAN><SPAN class="">:</SPAN> <SPAN class="">2</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>      <SPAN class="">"@odata.id"</SPAN><SPAN class="">:</SPAN> <SPAN class="">null</SPAN></SPAN>
<SPAN>    <SPAN class="">}</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>    <SPAN class="">{</SPAN></SPAN>
<SPAN>      <SPAN class="">"productcount@odata.type"</SPAN><SPAN class="">:</SPAN> <SPAN class="">"#Decimal"</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>      <SPAN class="">"productcount"</SPAN><SPAN class="">:</SPAN> <SPAN class="">13</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>      <SPAN class="">"Category_CategoryID"</SPAN><SPAN class="">:</SPAN> <SPAN class="">3</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>      <SPAN class="">"@odata.id"</SPAN><SPAN class="">:</SPAN> <SPAN class="">null</SPAN></SPAN>
<SPAN>    <SPAN class="">}</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>    <SPAN class="">{</SPAN></SPAN>
<SPAN>      <SPAN class="">"productcount@odata.type"</SPAN><SPAN class="">:</SPAN> <SPAN class="">"#Decimal"</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>      <SPAN class="">"productcount"</SPAN><SPAN class="">:</SPAN> <SPAN class="">10</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>      <SPAN class="">"Category_CategoryID"</SPAN><SPAN class="">:</SPAN> <SPAN class="">4</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>      <SPAN class="">"@odata.id"</SPAN><SPAN class="">:</SPAN> <SPAN class="">null</SPAN></SPAN>
<SPAN>    <SPAN class="">}</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>    <SPAN class="">{</SPAN></SPAN>
<SPAN>      <SPAN class="">"productcount@odata.type"</SPAN><SPAN class="">:</SPAN> <SPAN class="">"#Decimal"</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>      <SPAN class="">"productcount"</SPAN><SPAN class="">:</SPAN> <SPAN class="">7</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>      <SPAN class="">"Category_CategoryID"</SPAN><SPAN class="">:</SPAN> <SPAN class="">5</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>      <SPAN class="">"@odata.id"</SPAN><SPAN class="">:</SPAN> <SPAN class="">null</SPAN></SPAN>
<SPAN>    <SPAN class="">}</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>    <SPAN class="">{</SPAN></SPAN>
<SPAN>      <SPAN class="">"productcount@odata.type"</SPAN><SPAN class="">:</SPAN> <SPAN class="">"#Decimal"</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>      <SPAN class="">"productcount"</SPAN><SPAN class="">:</SPAN> <SPAN class="">6</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>      <SPAN class="">"Category_CategoryID"</SPAN><SPAN class="">:</SPAN> <SPAN class="">6</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>      <SPAN class="">"@odata.id"</SPAN><SPAN class="">:</SPAN> <SPAN class="">null</SPAN></SPAN>
<SPAN>    <SPAN class="">}</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>    <SPAN class="">{</SPAN></SPAN>
<SPAN>      <SPAN class="">"productcount@odata.type"</SPAN><SPAN class="">:</SPAN> <SPAN class="">"#Decimal"</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>      <SPAN class="">"productcount"</SPAN><SPAN class="">:</SPAN> <SPAN class="">5</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>      <SPAN class="">"Category_CategoryID"</SPAN><SPAN class="">:</SPAN> <SPAN class="">7</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>      <SPAN class="">"@odata.id"</SPAN><SPAN class="">:</SPAN> <SPAN class="">null</SPAN></SPAN>
<SPAN>    <SPAN class="">}</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>    <SPAN class="">{</SPAN></SPAN>
<SPAN>      <SPAN class="">"productcount@odata.type"</SPAN><SPAN class="">:</SPAN> <SPAN class="">"#Decimal"</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>      <SPAN class="">"productcount"</SPAN><SPAN class="">:</SPAN> <SPAN class="">12</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>      <SPAN class="">"Category_CategoryID"</SPAN><SPAN class="">:</SPAN> <SPAN class="">8</SPAN><SPAN class="">,</SPAN></SPAN>
<SPAN>      <SPAN class="">"@odata.id"</SPAN><SPAN class="">:</SPAN> <SPAN class="">null</SPAN></SPAN>
<SPAN>    <SPAN class="">}</SPAN></SPAN>
<SPAN>  <SPAN class="">]</SPAN></SPAN><SPAN><SPAN class="">}</SPAN></SPAN></PRE></DIV><P>As you can see, the OData V4 aggregate facilities, and CAP's support for them, is pretty neat!</P><H2 id="toc-hId--900835324">Your task</H2><P>Your task is to create a new category, and then request it. In other words, you must contruct an appropriate HTTP request to form an OData CREATE operation, to add a new category entity into the entity set. You can see from above that a category has just three properties:</P><UL><LI>CategoryID - this is the key and must be an integer value</LI><LI>CategoryName - a short name for the category</LI><LI>Description - a brief summary of what the category is</LI></UL><P>You must supply the following values for these properties when creating your new category:</P><UL><LI>CategoryID - your SAP Community ID <STRONG>number</STRONG> (see the Hints and tips section)</LI><LI>CategoryName - your SAP Community ID <STRONG>in lower case</STRONG></LI><LI>Description - the static text August Developer Challenge</LI></UL><BLOCKQUOTE><P>You can tell that the CategoryID property must be a number, because of how it's defined in the OData service's metadata document.</P></BLOCKQUOTE><P>Once you've created your new category, you must then construct an appropriate HTTP request to form an OData READ operation to request a representation of your category. There are some important points here:</P><UL><LI>you must use an OData READ operation and not an OData QUERY operation</LI><LI>you must exclude the Description property, i.e. you should request (and expect) only the category properties CategoryID and CategoryName</LI><LI>the representation of the response must be in JSON</LI></UL><P>The representation of the response is the value you need to hash and share as a new reply to this discussion thread, as always, and as described in <A href="https://groups.community.sap.com/t5/application-development/sap-developer-challenge-apis-task-0-learn-to-share-your-task/m-p/276058" target="_blank" rel="noopener noreferrer">Task 0</A>. Note that you'll have to URL encode the entire value, as you will be sending it within the value=('...') part of the hash service URL.</P><P>You should ensure that the order of the properties in the JSON object structure returned is sorted (it should already be, but double check or just add that processing to whatever mechanism you build to do this) and that there is no extraneous whitespace in the structure at all.</P><P>Here's an example of what a response representation will look like - note the single line and no whitespace, and that the CategoryName value is all lower case:</P><DIV class=""><PRE><SPAN><SPAN class="">{</SPAN><SPAN class="">"@odata.context"</SPAN><SPAN class="">:</SPAN><SPAN class="">"some-context-specification"</SPAN><SPAN class="">,</SPAN><SPAN class="">"CategoryID"</SPAN><SPAN class="">:</SPAN><SPAN class="">53</SPAN><SPAN class="">,</SPAN><SPAN class="">"CategoryName"</SPAN><SPAN class="">:</SPAN><SPAN class="">"qmacro"</SPAN><SPAN class="">}<BR /></SPAN></SPAN></PRE></DIV><H2 id="toc-hId-841975011">Hints and tips</H2><P>You already know about your SAP Community ID. For example, qmacro is the SAP Community ID for DJ Adams. To get your SAP Community ID number, which is unique, just go to your profile page, and get the number from your profile page's URL. For example, the profile page for DJ Adams is at <A class="" href="https://groups.community.sap.com/t5/user/viewprofilepage/user-id/53" target="_blank" rel="noopener noreferrer">https://groups.community.sap.com/t5/user/viewprofilepage/user-id/53</A> and looks like this:</P><P><IMG src="https://community.sap.com/assets/qmacro-profile-page.png" border="0" alt="" /><span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="qmacro-profile-page.png" style="width: 999px;"><img src="https://community.sap.com/t5/image/serverpage/image-id/42207iABF9875C90105128/image-size/large?v=v2&amp;px=999" role="button" title="qmacro-profile-page.png" alt="qmacro-profile-page.png" /></span></P><P>You can see the SAP Community ID number in the URL - it's 53. Go to your profile page and get the number from the resulting URL for your profile.</P><P>What about the OData READ vs OData QUERY operation question? Both use the same HTTP method (GET) but the structure of the data returned is different. Given that the data and its structure is what you need to ensure is correct before hashing it, it's important you think about how you would request that single new category.</P><H2 id="toc-hId--1710181950">For discussion</H2><P>What is the definition of the CategoryID property, according to the metadata document?</P><P>What is the difference between the result of an OData QUERY operation and the result of an OData READ operation? How does this relate to OData's origins? What is the significant difference in data structure returned?</P><P>Did you try to request a different representation of your category, such as XML? What happened?</P>
