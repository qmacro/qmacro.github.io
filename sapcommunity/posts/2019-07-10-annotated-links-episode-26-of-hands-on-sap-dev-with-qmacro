2019-07-10-annotated-links-episode-26-of-hands-on-sap-dev-with-qmacro
Annotated links: Episode 26 of Hands-on SAP dev with qmacro
technology-blog-sap
2019-07-10
https://community.sap.com/t5/technology-blogs-by-sap/annotated-links-episode-26-of-hands-on-sap-dev-with-qmacro/ba-p/13397959
<EM>This is a searchable description of the content of a live stream recording, specifically<STRONG> “Episode 26 - Vim CDS plugin with new <a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1387241">@Sisn</a>/cds-lsp package”</STRONG> in the “<A href="https://bit.ly/handsonsapdev" target="_blank" rel="nofollow noopener noreferrer">Hands-on SAP dev with qmacro</A>” series. There are links directly to specific highlights in the video recording. For links to annotations of other episodes, please see the “<A href="https://bit.ly/handsonsapdev#replays" target="_blank" rel="nofollow noopener noreferrer">Catch the replays</A>” section of the series blog post.</EM><BR />
<BR />
This episode, titled “<A href="https://bit.ly/handsonsapdev#ep26" target="_blank" rel="nofollow noopener noreferrer">Vim CDS plugin with new @sap/cds-lsp package</A>”, was streamed live on Wed 29 May 2019 and is approximately one hour in length. The stream recording is <A href="https://www.youtube.com/watch?v=S7PaeN4r7vQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0" target="_blank" rel="nofollow noopener noreferrer">available on YouTube</A>.<BR />
<BR />
<IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/07/Screen-Shot-2019-07-10-at-14.34.12-2.png" /><BR />
<BR />
Below is a brief synopsis, and links to specific highlights - use these links to jump directly to particular places of interest in the recording, based on ‘hh:mm:ss’ style timestamps.<BR />
<H2 id="brief-synopsis" id="toc-hId-908638958">Brief synopsis</H2><BR />
Now that the <SPAN class="citation" data-cites="sap/cds-lsp"><a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1387241">@Sisn</a>/cds-lsp</SPAN> package is published to the public SAP NPM registry, it’s a good time to look how we can incorporate that into the Vim CDS plugin.<BR />
<H2 id="links-to-specific-highlights" id="toc-hId-712125453">Links to specific highlights</H2><BR />
<STRONG><A href="https://www.youtube.com/watch?v=S7PaeN4r7vQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h01m50s" target="_blank" rel="nofollow noopener noreferrer">00:01:50</A>:</STRONG> Talking about the news from the CAP team that they’ve released the <CODE><a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1387241">@Sisn</a>/cds-lsp</CODE> package on the SAP NPM registry.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=S7PaeN4r7vQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h02m24s" target="_blank" rel="nofollow noopener noreferrer">00:02:24</A>:</STRONG> Highlighting a fellow live coding streamer <A href="https://www.twitch.tv/jamiepinelive" target="_blank" rel="nofollow noopener noreferrer">Jamie Pine</A> who does all sorts of interesting stuff and indeed a prolific streamer. He’s building live, in public as it were, his app and service <A href="https://notify.me" target="_blank" rel="nofollow noopener noreferrer">Notify</A>, which is very impressive. Definitely worth a follow on Twitch.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=S7PaeN4r7vQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h04m10s" target="_blank" rel="nofollow noopener noreferrer">00:04:10</A>:</STRONG> Looking at the CDS Language Support for VS Code extension available on the <A href="https://tools.hana.ondemand.com/#cloud" target="_blank" rel="nofollow noopener noreferrer">SAP Development Tools</A> site, which is where the <CODE><a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1387241">@Sisn</a>/cds-lsp</CODE> originally appeared (inside the compressed vsix file, which represented everything needed for the extension).<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=S7PaeN4r7vQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h07m15s" target="_blank" rel="nofollow noopener noreferrer">00:07:15</A>:</STRONG> In my quest to bring in CDS language goodness into Vim I originally started with the Vim plugin “<A href="https://github.com/autozimu/LanguageClient-neovim" target="_blank" rel="nofollow noopener noreferrer">LanguageClient-neovim</A>” (don’t let the name fool you - it also works with regular Vim as well as NeoVim). But I moved across to the <A href="https://github.com/w1rp/ale" target="_blank" rel="nofollow noopener noreferrer">Asynchronous Lint Engine (ALE)</A> recently and it’s been working quite nicely for me.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=S7PaeN4r7vQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h09m30s" target="_blank" rel="nofollow noopener noreferrer">00:09:30</A>:</STRONG> The version of <CODE><a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1387241">@Sisn</a>/cds-lsp</CODE> inside the 1.1.4 version of the CDS extension for VS Code is 2.0.7. Asking the SAP NPM registry for information about the newly independent version, we see that it’s already at 2.1.2. Now (at the time of writing this post) it’s at 2.1.4:<BR />
<PRE class="shell"><CODE>=&gt; npm info @sap/cds-lsp<BR />
@sap/cds-lsp@2.1.4 | SEE LICENSE IN LICENSE.txt | deps: 8 | versions: 2<BR />
Language server for CDS<BR />
<BR />
dist<BR />
.tarball: <A href="https://npm.sap.com/@sap/cds-lsp/-/cds-lsp-2.1.4.tgz" target="test_blank" rel="noopener noreferrer">https://npm.sap.com/@sap/cds-lsp/-/cds-lsp-2.1.4.tgz</A><BR />
.shasum: 5d9a7720a6278cc4299271194229b9c4f6b616e9<BR />
.integrity: sha512-NAoXcRviGbFMHZZwg7dY4+VNoocS4KABIsxbPwMS7PhYCig1naT6xCKac+VCUQYpQOiatvQgHooFrZOjz7lo9g==<BR />
<BR />
dependencies:<BR />
@sap/cds-compiler: 1.15.0<BR />
@types/antlr4: 4.7.0<BR />
fs.realpath: 1.0.0<BR />
ignore: 5.0.4<BR />
ts-md5: 1.2.4<BR />
vscode-languageserver-protocol: 3.14.1<BR />
vscode-languageserver: 5.2.1<BR />
vscode-uri: 1.0.6<BR />
<BR />
maintainers:<BR />
- https-support.sap.com &lt;do.not.reply@sap.com&gt;<BR />
<BR />
dist-tags:<BR />
latest: 2.1.4<BR />
<BR />
published a week ago by https-support.sap.com &lt;do.not.reply@sap.com&gt;</CODE></PRE><BR />
<STRONG><A href="https://www.youtube.com/watch?v=S7PaeN4r7vQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h13m50s" target="_blank" rel="nofollow noopener noreferrer">00:13:50</A>:</STRONG> Looking at the current state of the <CODE>vim-cds</CODE> plugin, examining each of the components in turn:<BR />
<UL><BR />
 	<LI>the file type detector</LI><BR />
 	<LI>the syntax highlighting specifications</LI><BR />
 	<LI>the hook for ALE</LI><BR />
</UL><BR />
While looking through them, we also take a quick look at my Vim configuration, which is using a new plugin manager (<A href="https://github.com/junegunn/vim-plug" target="_blank" rel="nofollow noopener noreferrer">vim-plug</A>) which allows me to organise my plugins in a cleaner way, and also allows me to specify <EM>local</EM> plugins such as this in-development <CODE>vim-cds</CODE> plugin:<BR />
<PRE><CODE>" vim-plug configuration<BR />
if empty(glob('~/.vim/autoload/plug.vim'))<BR />
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs<BR />
    \ <A href="https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim" target="test_blank" rel="nofollow noopener noreferrer">https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim</A><BR />
  autocmd VimEnter * PlugInstall | source $MYVIMRC<BR />
endif<BR />
<BR />
call plug#begin('~/.vim/plugged')<BR />
<BR />
Plug 'w0rp/ale'<BR />
Plug 'vim-airline/vim-airline'<BR />
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }<BR />
Plug 'junegunn/fzf.vim'<BR />
Plug 'junegunn/goyo.vim'<BR />
Plug 'junegunn/limelight.vim'<BR />
Plug 'tpope/vim-fugitive'<BR />
Plug 'tpope/vim-surround'<BR />
Plug 'tpope/vim-repeat'<BR />
Plug 'tpope/vim-unimpaired'<BR />
Plug 'morhetz/gruvbox'<BR />
Plug 'leafgarland/typescript-vim'<BR />
Plug '$HOME/local/projects/vim-cds'<BR />
<BR />
" Add plugins to &amp;runtimepath<BR />
call plug#end()</CODE></PRE><BR />
(The local plugin is the last one in the list).<BR />
<BR />
Going back to the hook for ALE, this is in the form of a short Vimscript that uses various built-in ALE functions to define and register <CODE>vim-cds</CODE>.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=S7PaeN4r7vQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h21m18s" target="_blank" rel="nofollow noopener noreferrer">00:21:18</A>:</STRONG> The ALE hook script references another helper script <CODE>startcdslsp</CODE> which starts up the language server from the <CODE><a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1387241">@Sisn</a>/cds-lsp</CODE> package, which right now has been lifted out of the vsix archive and placed directly inside the <CODE>vim-cds</CODE> plugin directory.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=S7PaeN4r7vQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h23m45s" target="_blank" rel="nofollow noopener noreferrer">00:23:45</A>:</STRONG> A quick check in a CDS file <CODE>db/data-model.cds</CODE> shows us that the <CODE>vim-cds</CODE> plugin, as it stands right now, is working for us, connected to the <CODE><a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1387241">@Sisn</a>/cds-lsp</CODE> based language server, and active in the context of ALE.<BR />
<BR />
We also try out some LSP based standard functions that are facilitated by ALE and implemented by the <CODE><a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1387241">@Sisn</a>/cds-lsp</CODE> package, such as <CODE>ALEGoToDefinition</CODE>.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=S7PaeN4r7vQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h28m52s" target="_blank" rel="nofollow noopener noreferrer">00:28:52</A>:</STRONG> Wanting to replace the “dropped-in” version of the <CODE><a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1387241">@Sisn</a>/cds-lsp</CODE> package with one that will be installed via <CODE>npm</CODE>, we look in <CODE>startcdslsp</CODE> to first of all find out where and how it’s used (via STDIO), before renaming it to move it out of the way.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=S7PaeN4r7vQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h33m00s" target="_blank" rel="nofollow noopener noreferrer">00:33:00</A>:</STRONG> Pondering the question whether we want to require a global install of <CODE><a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1387241">@Sisn</a>/cds-lsp</CODE> or one only local to the installation location of the <CODE>vim-cds</CODE> plugin.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=S7PaeN4r7vQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h33m55s" target="_blank" rel="nofollow noopener noreferrer">00:33:55</A>:</STRONG> Initialising the <CODE>vim-cds</CODE> plugin location as an NPM project (with <CODE>npm init</CODE>) and installing <CODE><a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1387241">@Sisn</a>/cds-lsp</CODE> locally in that location.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=S7PaeN4r7vQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h35m30s" target="_blank" rel="nofollow noopener noreferrer">00:35:30</A>:</STRONG> Noticing the presence also (in the <CODE>node_modules/</CODE> directory) of the <CODE><a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1387241">@Sisn</a>/cds-compiler</CODE> package, we check with <CODE>npm info</CODE> to see why - and yes, our suspicions are confirmed - there’s a dependency upon it (we saw this in the output earlier).<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=S7PaeN4r7vQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h37m09s" target="_blank" rel="nofollow noopener noreferrer">00:37:09</A>:</STRONG> Noticing that this version of <CODE><a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1387241">@Sisn</a>/cds-lsp</CODE> has no intermediate <CODE>src/</CODE> directory. Regardless, we now attempt to kick off this new version / instance of the server code, by adding the <CODE>--stdio</CODE> parameter on invocation directly in the <CODE>startcdslsp</CODE> script.<BR />
<BR />
<STRONG><A href="https://www.youtube.com/watch?v=S7PaeN4r7vQ&amp;list=PL6RpkC85SLQAIntm7MkNk78ysDm3Ua8t0&amp;t=00h47m30s" target="_blank" rel="nofollow noopener noreferrer">00:47:30</A>:</STRONG> Pondering how to make a Vim plugin completely independent and portable. Some questions I’m finding hard to answer right now, and we use a bit of loose brained hacking on the ALE <CODE>cds.vim</CODE> script to think about the questions.<BR />
<BR />
As we come to the end of this episode, they’re still not completely resolved. But that’s fine - this is very much a side project, and something to learn from as we go.<BR />
<BR />
Until next time!
